{
    "sourceFile": "src/utils/read.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 60,
            "patches": [
                {
                    "date": 1702992373366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702992538497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,13 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 21:28:58\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n import * as XLSX from 'xlsx';\r\n-import * as fs from 'fs';\r\n \r\n interface Option {\r\n   A: string;\r\n   B: string;\r\n"
                },
                {
                    "date": 1702992603169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   text: string;\r\n   options: Option;\r\n }\r\n \r\n-function readExcel(filePath: string): Question[] {\r\n+export function readExcel(filePath: string): Question[] {\r\n   // 读取 Excel 文件\r\n   const workbook = XLSX.readFile(filePath);\r\n \r\n   // 获取第一个 sheet\r\n"
                },
                {
                    "date": 1702992615733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   B: string;\r\n   C: string;\r\n }\r\n \r\n-interface Question {\r\n+export interface Question {\r\n   number: number;\r\n   text: string;\r\n   options: Option;\r\n }\r\n"
                },
                {
                    "date": 1702992840429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:28:58\r\n+ * @LastEditTime: 2023-12-19 21:34:00\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = 'path/to/your/excel/file.xlsx';\r\n+const filePath: string = 'C:/Users/86183/Desktop/测试题/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702992911051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:34:00\r\n+ * @LastEditTime: 2023-12-19 21:35:11\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = 'C:/Users/86183/Desktop/测试题/1.xlsx';\r\n+const filePath: string = '../../';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702992923732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = '../../';\r\n+const filePath: string = 'src\\assets\\problems\\1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702992931216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = 'src\\assets\\problems\\1.xlsx';\r\n+const filePath: string = 'src/assets/problems/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993016682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:35:11\r\n+ * @LastEditTime: 2023-12-19 21:36:56\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n"
                },
                {
                    "date": 1702993062625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = 'src/assets/problems/1.xlsx';\r\n+const filePath: string = 'D:\\project\\招新网站\\hope-enroll\\src\\assets\\problems\\1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993068501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = 'D:\\project\\招新网站\\hope-enroll\\src\\assets\\problems\\1.xlsx';\r\n+const filePath: string = 'D:\\project\\招新网站\\hope-enroll\\src\\assets/problems/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993074837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = 'D:\\project\\招新网站\\hope-enroll\\src\\assets/problems/1.xlsx';\r\n+const filePath: string = 'D:\\project\\招新网站/hope-enroll/src/assets/problems/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993158621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:36:56\r\n+ * @LastEditTime: 2023-12-19 21:37:58\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = 'D:\\project\\招新网站/hope-enroll/src/assets/problems/1.xlsx';\r\n+const filePath: string = '..//assets/problems/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993173079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = '..//assets/problems/1.xlsx';\r\n+const filePath: string = '../assets/problems/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993246058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:37:58\r\n+ * @LastEditTime: 2023-12-19 21:40:46\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = '../assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n+// const filePath: string = '../assets/problems/1.xlsx';\r\n+// const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993261032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-// const filePath: string = '../assets/problems/1.xlsx';\r\n-// const questions: Question[] = readExcel(filePath);\r\n+const filePath = '../assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993273955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath = '../assets/problems/1.xlsx';\r\n+const filePath: string = '../assets/problems/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702993333554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:40:46\r\n+ * @LastEditTime: 2023-12-19 21:42:13\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -63,10 +63,10 @@\n \r\n   return questions;\r\n }\r\n \r\n-// 读取 Excel 文件\r\n-const filePath: string = '../assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n+// // 读取 Excel 文件\r\n+// const filePath: string = '../assets/problems/1.xlsx';\r\n+// const questions: Question[] = readExcel(filePath);\r\n \r\n-// 打印题目信息\r\n-console.log(questions);\r\n+// // 打印题目信息\r\n+// console.log(questions);\r\n"
                },
                {
                    "date": 1702993638134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:42:13\r\n+ * @LastEditTime: 2023-12-19 21:47:18\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -63,10 +63,10 @@\n \r\n   return questions;\r\n }\r\n \r\n-// // 读取 Excel 文件\r\n-// const filePath: string = '../assets/problems/1.xlsx';\r\n-// const questions: Question[] = readExcel(filePath);\r\n+// 读取 Excel 文件\r\n+const filePath: string = '../assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n \r\n-// // 打印题目信息\r\n-// console.log(questions);\r\n+// 打印题目信息\r\n+console.log(questions);\r\n"
                },
                {
                    "date": 1702993753436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:47:18\r\n+ * @LastEditTime: 2023-12-19 21:49:13\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n+import * as fs from 'fs';\r\n \r\n interface Option {\r\n   A: string;\r\n   B: string;\r\n"
                },
                {
                    "date": 1702993771295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 21:49:13\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n+  text: string;\r\n+  options: Option;\r\n+}\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+  // 读取 Excel 文件\r\n+  const workbook = XLSX.readFile(filePath);\r\n+\r\n+  // 获取第一个 sheet\r\n+  const sheetName = workbook.SheetNames[0];\r\n+  const sheet = workbook.Sheets[sheetName];\r\n+\r\n+  // 定义存储题目的数组\r\n+  const questions: Question[] = [];\r\n+\r\n+  // 遍历 Excel 行\r\n+  for (let rowIndex = 2; ; rowIndex++) {\r\n+    const cell = sheet[`A${rowIndex}`];\r\n+\r\n+    // 如果没有内容，表示已经读取完毕\r\n+    if (!cell || !cell.v) {\r\n+      break;\r\n+    }\r\n+\r\n+    // 获取题目信息\r\n+    const questionNumber: number = cell.v;\r\n+    const questionText: string = sheet[`B${rowIndex}`].v;\r\n+    const optionA: string = sheet[`C${rowIndex}`].v;\r\n+    const optionB: string = sheet[`D${rowIndex}`].v;\r\n+    const optionC: string = sheet[`E${rowIndex}`].v;\r\n+\r\n+    // 存储题目信息\r\n+    const question: Question = {\r\n+      number: questionNumber,\r\n+      text: questionText,\r\n+      options: {\r\n+        A: optionA,\r\n+        B: optionB,\r\n+        C: optionC,\r\n+      },\r\n+    };\r\n+\r\n+    questions.push(question);\r\n+  }\r\n+\r\n+  return questions;\r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+const filePath: string = '../assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n"
                },
                {
                    "date": 1702993911246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,77 +69,4 @@\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:49:13\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n-import * as fs from 'fs';\r\n-\r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-\r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n-\r\n-export function readExcel(filePath: string): Question[] {\r\n-  // 读取 Excel 文件\r\n-  const workbook = XLSX.readFile(filePath);\r\n-\r\n-  // 获取第一个 sheet\r\n-  const sheetName = workbook.SheetNames[0];\r\n-  const sheet = workbook.Sheets[sheetName];\r\n-\r\n-  // 定义存储题目的数组\r\n-  const questions: Question[] = [];\r\n-\r\n-  // 遍历 Excel 行\r\n-  for (let rowIndex = 2; ; rowIndex++) {\r\n-    const cell = sheet[`A${rowIndex}`];\r\n-\r\n-    // 如果没有内容，表示已经读取完毕\r\n-    if (!cell || !cell.v) {\r\n-      break;\r\n-    }\r\n-\r\n-    // 获取题目信息\r\n-    const questionNumber: number = cell.v;\r\n-    const questionText: string = sheet[`B${rowIndex}`].v;\r\n-    const optionA: string = sheet[`C${rowIndex}`].v;\r\n-    const optionB: string = sheet[`D${rowIndex}`].v;\r\n-    const optionC: string = sheet[`E${rowIndex}`].v;\r\n-\r\n-    // 存储题目信息\r\n-    const question: Question = {\r\n-      number: questionNumber,\r\n-      text: questionText,\r\n-      options: {\r\n-        A: optionA,\r\n-        B: optionB,\r\n-        C: optionC,\r\n-      },\r\n-    };\r\n-\r\n-    questions.push(question);\r\n-  }\r\n-\r\n-  return questions;\r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-const filePath: string = '../assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n"
                },
                {
                    "date": 1702993956470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:49:13\r\n+ * @LastEditTime: 2023-12-19 21:52:36\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -64,9 +64,9 @@\n   return questions;\r\n }\r\n \r\n // 读取 Excel 文件\r\n-const filePath: string = '../assets/problems/1.xlsx';\r\n+let filePath: string = '../assets/problems/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702994248601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:52:36\r\n+ * @LastEditTime: 2023-12-19 21:57:28\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -69,4 +69,19 @@\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+    try {\r\n+      // 读取 Excel 文件\r\n+      const workbook = XLSX.readFile(filePath);\r\n+  \r\n+      // 其他代码...\r\n+  \r\n+      return questions;\r\n+    } catch (error) {\r\n+      console.error('Error reading Excel file:', error);\r\n+      return [];\r\n+    }\r\n+  }\r\n+  \r\n"
                },
                {
                    "date": 1702994258182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,18 +70,5 @@\n \r\n // 打印题目信息\r\n console.log(questions);\r\n \r\n-export function readExcel(filePath: string): Question[] {\r\n-    try {\r\n-      // 读取 Excel 文件\r\n-      const workbook = XLSX.readFile(filePath);\r\n   \r\n-      // 其他代码...\r\n-  \r\n-      return questions;\r\n-    } catch (error) {\r\n-      console.error('Error reading Excel file:', error);\r\n-      return [];\r\n-    }\r\n-  }\r\n-  \r\n"
                },
                {
                    "date": 1702994272233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n   options: Option;\r\n }\r\n \r\n export function readExcel(filePath: string): Question[] {\r\n-  // 读取 Excel 文件\r\n+  /\r\n+  / 读取 Excel 文件\r\n   const workbook = XLSX.readFile(filePath);\r\n \r\n   // 获取第一个 sheet\r\n   const sheetName = workbook.SheetNames[0];\r\n"
                },
                {
                    "date": 1702994278434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,12 @@\n   options: Option;\r\n }\r\n \r\n export function readExcel(filePath: string): Question[] {\r\n-  /\r\n-  / 读取 Excel 文件\r\n+  try{\r\n+    \r\n+  }\r\n+    // 读取 Excel 文件\r\n   const workbook = XLSX.readFile(filePath);\r\n \r\n   // 获取第一个 sheet\r\n   const sheetName = workbook.SheetNames[0];\r\n"
                },
                {
                    "date": 1702994293899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,22 +21,22 @@\n }\r\n \r\n export function readExcel(filePath: string): Question[] {\r\n   try{\r\n-    \r\n+\r\n   }\r\n     // 读取 Excel 文件\r\n-  const workbook = XLSX.readFile(filePath);\r\n+    const workbook = XLSX.readFile(filePath);\r\n \r\n-  // 获取第一个 sheet\r\n-  const sheetName = workbook.SheetNames[0];\r\n-  const sheet = workbook.Sheets[sheetName];\r\n+    // 获取第一个 sheet\r\n+    const sheetName = workbook.SheetNames[0];\r\n+    const sheet = workbook.Sheets[sheetName];\r\n \r\n-  // 定义存储题目的数组\r\n-  const questions: Question[] = [];\r\n+    // 定义存储题目的数组\r\n+    const questions: Question[] = [];\r\n \r\n-  // 遍历 Excel 行\r\n-  for (let rowIndex = 2; ; rowIndex++) {\r\n+    // 遍历 Excel 行\r\n+    for (let rowIndex = 2; ; rowIndex++) {\r\n     const cell = sheet[`A${rowIndex}`];\r\n \r\n     // 如果没有内容，表示已经读取完毕\r\n     if (!cell || !cell.v) {\r\n"
                },
                {
                    "date": 1702994305411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 21:57:28\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n+  text: string;\r\n+  options: Option;\r\n+}\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+  try{\r\n+\r\n+  }\r\n+    \r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+let filePath: string = '../assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n+\r\n+  \r\n"
                },
                {
                    "date": 1702994316924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 21:58:28\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n+  text: string;\r\n+  options: Option;\r\n+}\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+  try{\r\n+    // 读取 Excel 文件\r\n+    const workbook = XLSX.readFile(filePath);\r\n+\r\n+    // 获取第一个 sheet\r\n+    const sheetName = workbook.SheetNames[0];\r\n+    const sheet = workbook.Sheets[sheetName];\r\n+\r\n+    // 定义存储题目的数组\r\n+    const questions: Question[] = [];\r\n+\r\n+    // 遍历 Excel 行\r\n+    for (let rowIndex = 2; ; rowIndex++) {\r\n+    const cell = sheet[`A${rowIndex}`];\r\n+\r\n+    // 如果没有内容，表示已经读取完毕\r\n+    if (!cell || !cell.v) {\r\n+    break;\r\n+    }\r\n+\r\n+    // 获取题目信息\r\n+    const questionNumber: number = cell.v;\r\n+    const questionText: string = sheet[`B${rowIndex}`].v;\r\n+    const optionA: string = sheet[`C${rowIndex}`].v;\r\n+    const optionB: string = sheet[`D${rowIndex}`].v;\r\n+    const optionC: string = sheet[`E${rowIndex}`].v;\r\n+\r\n+    // 存储题目信息\r\n+    const question: Question = {\r\n+    number: questionNumber,\r\n+    text: questionText,\r\n+    options: {\r\n+        A: optionA,\r\n+        B: optionB,\r\n+        C: optionC,\r\n+    },\r\n+    };\r\n+\r\n+    questions.push(question);\r\n+    }\r\n+\r\n+    return questions;\r\n+  }\r\n+    \r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+let filePath: string = '../assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n+\r\n+  \r\n"
                },
                {
                    "date": 1702994325618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n     questions.push(question);\r\n     }\r\n \r\n     return questions;\r\n-  }\r\n+  }catch\r\n     \r\n }\r\n \r\n // 读取 Excel 文件\r\n@@ -74,118 +74,4 @@\n // 打印题目信息\r\n console.log(questions);\r\n \r\n   \r\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:57:28\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n-\r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-\r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n-\r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-\r\n-  }\r\n-    \r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-let filePath: string = '../assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n-\r\n-  \r\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:57:28\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n-\r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-\r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n-\r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-\r\n-  }\r\n-    // 读取 Excel 文件\r\n-    const workbook = XLSX.readFile(filePath);\r\n-\r\n-    // 获取第一个 sheet\r\n-    const sheetName = workbook.SheetNames[0];\r\n-    const sheet = workbook.Sheets[sheetName];\r\n-\r\n-    // 定义存储题目的数组\r\n-    const questions: Question[] = [];\r\n-\r\n-    // 遍历 Excel 行\r\n-    for (let rowIndex = 2; ; rowIndex++) {\r\n-    const cell = sheet[`A${rowIndex}`];\r\n-\r\n-    // 如果没有内容，表示已经读取完毕\r\n-    if (!cell || !cell.v) {\r\n-      break;\r\n-    }\r\n-\r\n-    // 获取题目信息\r\n-    const questionNumber: number = cell.v;\r\n-    const questionText: string = sheet[`B${rowIndex}`].v;\r\n-    const optionA: string = sheet[`C${rowIndex}`].v;\r\n-    const optionB: string = sheet[`D${rowIndex}`].v;\r\n-    const optionC: string = sheet[`E${rowIndex}`].v;\r\n-\r\n-    // 存储题目信息\r\n-    const question: Question = {\r\n-      number: questionNumber,\r\n-      text: questionText,\r\n-      options: {\r\n-        A: optionA,\r\n-        B: optionB,\r\n-        C: optionC,\r\n-      },\r\n-    };\r\n-\r\n-    questions.push(question);\r\n-  }\r\n-\r\n-  return questions;\r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-let filePath: string = '../assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n-\r\n-  \r\n"
                },
                {
                    "date": 1702994331424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 21:58:28\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n+  text: string;\r\n+  options: Option;\r\n+}\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+  try{\r\n+    // 读取 Excel 文件\r\n+    const workbook = XLSX.readFile(filePath);\r\n+\r\n+    // 获取第一个 sheet\r\n+    const sheetName = workbook.SheetNames[0];\r\n+    const sheet = workbook.Sheets[sheetName];\r\n+\r\n+    // 定义存储题目的数组\r\n+    const questions: Question[] = [];\r\n+\r\n+    // 遍历 Excel 行\r\n+    for (let rowIndex = 2; ; rowIndex++) {\r\n+    const cell = sheet[`A${rowIndex}`];\r\n+\r\n+    // 如果没有内容，表示已经读取完毕\r\n+    if (!cell || !cell.v) {\r\n+    break;\r\n+    }\r\n+\r\n+    // 获取题目信息\r\n+    const questionNumber: number = cell.v;\r\n+    const questionText: string = sheet[`B${rowIndex}`].v;\r\n+    const optionA: string = sheet[`C${rowIndex}`].v;\r\n+    const optionB: string = sheet[`D${rowIndex}`].v;\r\n+    const optionC: string = sheet[`E${rowIndex}`].v;\r\n+\r\n+    // 存储题目信息\r\n+    const question: Question = {\r\n+    number: questionNumber,\r\n+    text: questionText,\r\n+    options: {\r\n+        A: optionA,\r\n+        B: optionB,\r\n+        C: optionC,\r\n+    },\r\n+    };\r\n+\r\n+    questions.push(question);\r\n+    }\r\n+\r\n+    return questions;\r\n+  }catch(err)\r\n+    \r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+let filePath: string = '../assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n+\r\n+  \r\n"
                },
                {
                    "date": 1702994341336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,12 @@\n     questions.push(question);\r\n     }\r\n \r\n     return questions;\r\n-  }catch(err)\r\n+  }catch(error){\r\n+    console.error('Error reading Excel file:', error);\r\n+    return [];\r\n+  }\r\n     \r\n }\r\n \r\n // 读取 Excel 文件\r\n@@ -74,81 +77,4 @@\n // 打印题目信息\r\n console.log(questions);\r\n \r\n   \r\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:58:28\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n-\r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-\r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n-\r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-    // 读取 Excel 文件\r\n-    const workbook = XLSX.readFile(filePath);\r\n-\r\n-    // 获取第一个 sheet\r\n-    const sheetName = workbook.SheetNames[0];\r\n-    const sheet = workbook.Sheets[sheetName];\r\n-\r\n-    // 定义存储题目的数组\r\n-    const questions: Question[] = [];\r\n-\r\n-    // 遍历 Excel 行\r\n-    for (let rowIndex = 2; ; rowIndex++) {\r\n-    const cell = sheet[`A${rowIndex}`];\r\n-\r\n-    // 如果没有内容，表示已经读取完毕\r\n-    if (!cell || !cell.v) {\r\n-    break;\r\n-    }\r\n-\r\n-    // 获取题目信息\r\n-    const questionNumber: number = cell.v;\r\n-    const questionText: string = sheet[`B${rowIndex}`].v;\r\n-    const optionA: string = sheet[`C${rowIndex}`].v;\r\n-    const optionB: string = sheet[`D${rowIndex}`].v;\r\n-    const optionC: string = sheet[`E${rowIndex}`].v;\r\n-\r\n-    // 存储题目信息\r\n-    const question: Question = {\r\n-    number: questionNumber,\r\n-    text: questionText,\r\n-    options: {\r\n-        A: optionA,\r\n-        B: optionB,\r\n-        C: optionC,\r\n-    },\r\n-    };\r\n-\r\n-    questions.push(question);\r\n-    }\r\n-\r\n-    return questions;\r\n-  }catch\r\n-    \r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-let filePath: string = '../assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n-\r\n-  \r\n"
                },
                {
                    "date": 1702994382986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:58:28\r\n+ * @LastEditTime: 2023-12-19 21:59:42\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -33,34 +33,34 @@\n     const questions: Question[] = [];\r\n \r\n     // 遍历 Excel 行\r\n     for (let rowIndex = 2; ; rowIndex++) {\r\n-    const cell = sheet[`A${rowIndex}`];\r\n+        const cell = sheet[`A${rowIndex}`];\r\n \r\n-    // 如果没有内容，表示已经读取完毕\r\n-    if (!cell || !cell.v) {\r\n-    break;\r\n-    }\r\n+        // 如果没有内容，表示已经读取完毕\r\n+        if (!cell || !cell.v) {\r\n+        break;\r\n+        }\r\n \r\n-    // 获取题目信息\r\n-    const questionNumber: number = cell.v;\r\n-    const questionText: string = sheet[`B${rowIndex}`].v;\r\n-    const optionA: string = sheet[`C${rowIndex}`].v;\r\n-    const optionB: string = sheet[`D${rowIndex}`].v;\r\n-    const optionC: string = sheet[`E${rowIndex}`].v;\r\n+        // 获取题目信息\r\n+        const questionNumber: number = cell.v;\r\n+        const questionText: string = sheet[`B${rowIndex}`].v;\r\n+        const optionA: string = sheet[`C${rowIndex}`].v;\r\n+        const optionB: string = sheet[`D${rowIndex}`].v;\r\n+        const optionC: string = sheet[`E${rowIndex}`].v;\r\n \r\n-    // 存储题目信息\r\n-    const question: Question = {\r\n-    number: questionNumber,\r\n-    text: questionText,\r\n-    options: {\r\n-        A: optionA,\r\n-        B: optionB,\r\n-        C: optionC,\r\n-    },\r\n-    };\r\n+        // 存储题目信息\r\n+        const question: Question = {\r\n+        number: questionNumber,\r\n+        text: questionText,\r\n+        options: {\r\n+            A: optionA,\r\n+            B: optionB,\r\n+            C: optionC,\r\n+        },\r\n+        };\r\n \r\n-    questions.push(question);\r\n+        questions.push(question);\r\n     }\r\n \r\n     return questions;\r\n   }catch(error){\r\n"
                },
                {
                    "date": 1702994782562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,80 +1,38 @@\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 21:59:42\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n+import XLSX from 'xlsx';\r\n \r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n+const questions = [];\r\n \r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n+// 读取 Excel 文件\r\n+const fileReader = new FileReader();\r\n+fileReader.onload = (event) => {\r\n+  const data = event.target.result;\r\n+  const workbook = XLSX.read(data, { type: 'binary' });\r\n \r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-    // 读取 Excel 文件\r\n-    const workbook = XLSX.readFile(filePath);\r\n+  // 获取第一个工作表的数据\r\n+  const worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n+  const sheetData = XLSX.utils.sheet_to_json(worksheet);\r\n \r\n-    // 获取第一个 sheet\r\n-    const sheetName = workbook.SheetNames[0];\r\n-    const sheet = workbook.Sheets[sheetName];\r\n+  // 将每一行数据转化为题目对象，并添加到数组中\r\n+  sheetData.forEach((row) => {\r\n+    const question = {\r\n+      id: row.id, // 题目 ID\r\n+      text: row.text, // 题目内容\r\n+      options: [row.option1, row.option2, row.option3, row.option4], // 选项列表\r\n+      answer: row.answer // 正确答案\r\n+    };\r\n+    questions.push(question);\r\n+  });\r\n \r\n-    // 定义存储题目的数组\r\n-    const questions: Question[] = [];\r\n+  console.log('测试题导入完成！');\r\n+  console.log(questions); // 打印测试题数组\r\n+};\r\n \r\n-    // 遍历 Excel 行\r\n-    for (let rowIndex = 2; ; rowIndex++) {\r\n-        const cell = sheet[`A${rowIndex}`];\r\n-\r\n-        // 如果没有内容，表示已经读取完毕\r\n-        if (!cell || !cell.v) {\r\n-        break;\r\n-        }\r\n-\r\n-        // 获取题目信息\r\n-        const questionNumber: number = cell.v;\r\n-        const questionText: string = sheet[`B${rowIndex}`].v;\r\n-        const optionA: string = sheet[`C${rowIndex}`].v;\r\n-        const optionB: string = sheet[`D${rowIndex}`].v;\r\n-        const optionC: string = sheet[`E${rowIndex}`].v;\r\n-\r\n-        // 存储题目信息\r\n-        const question: Question = {\r\n-        number: questionNumber,\r\n-        text: questionText,\r\n-        options: {\r\n-            A: optionA,\r\n-            B: optionB,\r\n-            C: optionC,\r\n-        },\r\n-        };\r\n-\r\n-        questions.push(question);\r\n-    }\r\n-\r\n-    return questions;\r\n-  }catch(error){\r\n-    console.error('Error reading Excel file:', error);\r\n-    return [];\r\n-  }\r\n-    \r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-let filePath: string = '../assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n-\r\n-  \r\n+// 选择文件并读取数据\r\n+const inputElement = document.createElement('input');\r\n+inputElement.type = 'file';\r\n+inputElement.accept = '.xlsx, .xls, .csv';\r\n+inputElement.addEventListener('change', () => {\r\n+  const file = inputElement.files[0];\r\n+  fileReader.readAsBinaryString(file);\r\n+});\r\n+inputElement.click();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702994825012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,33 @@\n-import XLSX from 'xlsx';\r\n+import * as XLSX from 'xlsx';\r\n \r\n-const questions = [];\r\n+interface Question {\r\n+  id: number;\r\n+  text: string;\r\n+  options: string[];\r\n+  answer: string;\r\n+}\r\n \r\n+const questions: Question[] = [];\r\n+\r\n // 读取 Excel 文件\r\n const fileReader = new FileReader();\r\n-fileReader.onload = (event) => {\r\n-  const data = event.target.result;\r\n+\r\n+fileReader.onload = (event: ProgressEvent<FileReader>) => {\r\n+  const data = event.target?.result as string;\r\n   const workbook = XLSX.read(data, { type: 'binary' });\r\n \r\n   // 获取第一个工作表的数据\r\n   const worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n   const sheetData = XLSX.utils.sheet_to_json(worksheet);\r\n \r\n   // 将每一行数据转化为题目对象，并添加到数组中\r\n-  sheetData.forEach((row) => {\r\n-    const question = {\r\n-      id: row.id, // 题目 ID\r\n-      text: row.text, // 题目内容\r\n-      options: [row.option1, row.option2, row.option3, row.option4], // 选项列表\r\n-      answer: row.answer // 正确答案\r\n+  sheetData.forEach((row: any) => {\r\n+    const question: Question = {\r\n+      id: row.id as number, // 题目 ID\r\n+      text: row.text as string, // 题目内容\r\n+      options: [row.option1, row.option2, row.option3, row.option4].filter(Boolean) as string[], // 选项列表\r\n+      answer: row.answer as string, // 正确答案\r\n     };\r\n     questions.push(question);\r\n   });\r\n \r\n@@ -31,8 +39,8 @@\n const inputElement = document.createElement('input');\r\n inputElement.type = 'file';\r\n inputElement.accept = '.xlsx, .xls, .csv';\r\n inputElement.addEventListener('change', () => {\r\n-  const file = inputElement.files[0];\r\n+  const file = (inputElement.files as FileList)[0];\r\n   fileReader.readAsBinaryString(file);\r\n });\r\n\\ No newline at end of file\n-inputElement.click();\n+inputElement.click();\r\n"
                },
                {
                    "date": 1702995037974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,46 +1,79 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 22:10:37\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n import * as XLSX from 'xlsx';\r\n \r\n-interface Question {\r\n-  id: number;\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n   text: string;\r\n-  options: string[];\r\n-  answer: string;\r\n+  options: Option;\r\n }\r\n \r\n-const questions: Question[] = [];\r\n+export function readExcel(filePath: string): Question[] {\r\n+  try{\r\n+    // 读取 Excel 文件\r\n+    const workbook = XLSX.readFile(filePath);\r\n \r\n-// 读取 Excel 文件\r\n-const fileReader = new FileReader();\r\n+    // 获取第一个 sheet\r\n+    const sheetName = workbook.SheetNames[0];\r\n+    const sheet = workbook.Sheets[sheetName];\r\n \r\n-fileReader.onload = (event: ProgressEvent<FileReader>) => {\r\n-  const data = event.target?.result as string;\r\n-  const workbook = XLSX.read(data, { type: 'binary' });\r\n+    // 定义存储题目的数组\r\n+    const questions: Question[] = [];\r\n \r\n-  // 获取第一个工作表的数据\r\n-  const worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n\\ No newline at end of file\n-  const sheetData = XLSX.utils.sheet_to_json(worksheet);\r\n+    // 遍历 Excel 行\r\n+    for (let rowIndex = 2; ; rowIndex++) {\r\n+        const cell = sheet[`A${rowIndex}`];\r\n \r\n-  // 将每一行数据转化为题目对象，并添加到数组中\r\n-  sheetData.forEach((row: any) => {\r\n-    const question: Question = {\r\n-      id: row.id as number, // 题目 ID\r\n-      text: row.text as string, // 题目内容\r\n-      options: [row.option1, row.option2, row.option3, row.option4].filter(Boolean) as string[], // 选项列表\r\n-      answer: row.answer as string, // 正确答案\r\n-    };\r\n-    questions.push(question);\r\n-  });\r\n+        // 如果没有内容，表示已经读取完毕\r\n+        if (!cell || !cell.v) {\r\n+        break;\r\n+        }\r\n \r\n-  console.log('测试题导入完成！');\r\n-  console.log(questions); // 打印测试题数组\r\n-};\r\n+        // 获取题目信息\r\n+        const questionNumber: number = cell.v;\r\n+        const questionText: string = sheet[`B${rowIndex}`].v;\r\n+        const optionA: string = sheet[`C${rowIndex}`].v;\r\n+        const optionB: string = sheet[`D${rowIndex}`].v;\r\n+        const optionC: string = sheet[`E${rowIndex}`].v;\r\n \r\n-// 选择文件并读取数据\r\n-const inputElement = document.createElement('input');\r\n-inputElement.type = 'file';\r\n-inputElement.accept = '.xlsx, .xls, .csv';\r\n-inputElement.addEventListener('change', () => {\r\n-  const file = (inputElement.files as FileList)[0];\r\n-  fileReader.readAsBinaryString(file);\r\n-});\r\n-inputElement.click();\n+        // 存储题目信息\r\n+        const question: Question = {\r\n+        number: questionNumber,\r\n+        text: questionText,\r\n+        options: {\r\n+            A: optionA,\r\n+            B: optionB,\r\n+            C: optionC,\r\n+        },\r\n+        };\r\n+\r\n+        questions.push(question);\r\n+    }\r\n+    return questions;\r\n+  }catch(error){\r\n+    console.error('Error reading Excel file:', error);\r\n+    return [];\r\n+  }\r\n+    \r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+let filePath: string = '../assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n+\r\n+  \r\n"
                },
                {
                    "date": 1702995522079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:10:37\r\n+ * @LastEditTime: 2023-12-19 22:18:42\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -19,8 +19,29 @@\n   text: string;\r\n   options: Option;\r\n }\r\n \r\n+export const readExcelFile = async (filePath) => {\r\n+    try {\r\n+        const path = 'src/common/utils';\r\n+        const file = xlsx.readFile(`${path}/${filePath}`);\r\n+        let data = []\r\n+        const sheets = file.SheetNames\r\n+        for (let i = 0; i < sheets.length; i++) {\r\n+            const temp = xlsx.utils.sheet_to_json(\r\n+                file.Sheets[file.SheetNames[i]])\r\n+            temp.forEach((res) => {\r\n+                data.push(res)\r\n+            })\r\n+        }\r\n+        console.log(data);\r\n+        return data;\r\n+    }\r\n+    catch (err) {\r\n+        console.log(err);\r\n+    }\r\n+}\r\n+\r\n export function readExcel(filePath: string): Question[] {\r\n   try{\r\n     // 读取 Excel 文件\r\n     const workbook = XLSX.readFile(filePath);\r\n"
                },
                {
                    "date": 1702995707640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:18:42\r\n+ * @LastEditTime: 2023-12-19 22:21:47\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -21,9 +21,9 @@\n }\r\n \r\n export const readExcelFile = async (filePath) => {\r\n     try {\r\n-        const path = 'src/common/utils';\r\n+        const path = '../assets/problems/1.xlsx';\r\n         const file = xlsx.readFile(`${path}/${filePath}`);\r\n         let data = []\r\n         const sheets = file.SheetNames\r\n         for (let i = 0; i < sheets.length; i++) {\r\n"
                },
                {
                    "date": 1702995713402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n }\r\n \r\n export const readExcelFile = async (filePath) => {\r\n     try {\r\n-        const path = '../assets/problems/1.xlsx';\r\n+        const path = '../assets/problems/';\r\n         const file = xlsx.readFile(`${path}/${filePath}`);\r\n         let data = []\r\n         const sheets = file.SheetNames\r\n         for (let i = 0; i < sheets.length; i++) {\r\n"
                },
                {
                    "date": 1702995752508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n   text: string;\r\n   options: Option;\r\n }\r\n \r\n-export const readExcelFile = async (filePath) => {\r\n+export const readExcelFile = async (filePath: string) => {\r\n     try {\r\n-        const path = '../assets/problems/';\r\n+        const path = '../assets/problems';\r\n         const file = xlsx.readFile(`${path}/${filePath}`);\r\n         let data = []\r\n         const sheets = file.SheetNames\r\n         for (let i = 0; i < sheets.length; i++) {\r\n"
                },
                {
                    "date": 1702995759649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \r\n export const readExcelFile = async (filePath: string) => {\r\n     try {\r\n         const path = '../assets/problems';\r\n-        const file = xlsx.readFile(`${path}/${filePath}`);\r\n+        const file = XLSX.readFile(`${path}/${filePath}`);\r\n         let data = []\r\n         const sheets = file.SheetNames\r\n         for (let i = 0; i < sheets.length; i++) {\r\n             const temp = xlsx.utils.sheet_to_json(\r\n"
                },
                {
                    "date": 1702995785638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:21:47\r\n+ * @LastEditTime: 2023-12-19 22:23:05\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -23,12 +23,12 @@\n export const readExcelFile = async (filePath: string) => {\r\n     try {\r\n         const path = '../assets/problems';\r\n         const file = XLSX.readFile(`${path}/${filePath}`);\r\n-        let data = []\r\n+        let data = [];\r\n         const sheets = file.SheetNames\r\n         for (let i = 0; i < sheets.length; i++) {\r\n-            const temp = xlsx.utils.sheet_to_json(\r\n+            const temp = XLSX.utils.sheet_to_json(\r\n                 file.Sheets[file.SheetNames[i]])\r\n             temp.forEach((res) => {\r\n                 data.push(res)\r\n             })\r\n"
                },
                {
                    "date": 1702995803555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n }\r\n \r\n export const readExcelFile = async (filePath: string) => {\r\n     try {\r\n-        const path = '../assets/problems';\r\n+        const path = 'src/assets/problems';\r\n         const file = XLSX.readFile(`${path}/${filePath}`);\r\n         let data = [];\r\n         const sheets = file.SheetNames\r\n         for (let i = 0; i < sheets.length; i++) {\r\n"
                },
                {
                    "date": 1702995852998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:23:05\r\n+ * @LastEditTime: 2023-12-19 22:24:12\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -90,9 +90,9 @@\n     \r\n }\r\n \r\n // 读取 Excel 文件\r\n-let filePath: string = '../assets/problems/1.xlsx';\r\n+let filePath: string = 'src/assets/problems/1.xlsx';\r\n const questions: Question[] = readExcel(filePath);\r\n \r\n // 打印题目信息\r\n console.log(questions);\r\n"
                },
                {
                    "date": 1702995874513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 22:24:12\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n+  text: string;\r\n+  options: Option;\r\n+}\r\n+\r\n+export const readExcelFile = async (filePath: string) => {\r\n+    try {\r\n+        const path = 'src/assets/problems';\r\n+        const file = XLSX.readFile(`${path}/${filePath}`);\r\n+        let data3 = [];\r\n+        const sheets = file.SheetNames\r\n+        for (let i = 0; i < sheets.length; i++) {\r\n+            const temp = XLSX.utils.sheet_to_json(\r\n+                file.Sheets[file.SheetNames[i]])\r\n+            temp.forEach((res) => {\r\n+                data.push(res)\r\n+            })\r\n+        }\r\n+        console.log(data);\r\n+        return data;\r\n+    }\r\n+    catch (err) {\r\n+        console.log(err);\r\n+    }\r\n+}\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+  try{\r\n+    // 读取 Excel 文件\r\n+    const workbook = XLSX.readFile(filePath);\r\n+\r\n+    // 获取第一个 sheet\r\n+    const sheetName = workbook.SheetNames[0];\r\n+    const sheet = workbook.Sheets[sheetName];\r\n+\r\n+    // 定义存储题目的数组\r\n+    const questions: Question[] = [];\r\n+\r\n+    // 遍历 Excel 行\r\n+    for (let rowIndex = 2; ; rowIndex++) {\r\n+        const cell = sheet[`A${rowIndex}`];\r\n+\r\n+        // 如果没有内容，表示已经读取完毕\r\n+        if (!cell || !cell.v) {\r\n+        break;\r\n+        }\r\n+\r\n+        // 获取题目信息\r\n+        const questionNumber: number = cell.v;\r\n+        const questionText: string = sheet[`B${rowIndex}`].v;\r\n+        const optionA: string = sheet[`C${rowIndex}`].v;\r\n+        const optionB: string = sheet[`D${rowIndex}`].v;\r\n+        const optionC: string = sheet[`E${rowIndex}`].v;\r\n+\r\n+        // 存储题目信息\r\n+        const question: Question = {\r\n+        number: questionNumber,\r\n+        text: questionText,\r\n+        options: {\r\n+            A: optionA,\r\n+            B: optionB,\r\n+            C: optionC,\r\n+        },\r\n+        };\r\n+\r\n+        questions.push(question);\r\n+    }\r\n+    return questions;\r\n+  }catch(error){\r\n+    console.error('Error reading Excel file:', error);\r\n+    return [];\r\n+  }\r\n+    \r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+let filePath: string = 'src/assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n+\r\n+  \r\n"
                },
                {
                    "date": 1702995884813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 22:24:12\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n+  text: string;\r\n+  options: Option;\r\n+}\r\n+\r\n+export const readExcelFile = async (filePath: string) => {\r\n+    try {\r\n+        const path = 'src/assets/problems';\r\n+        const file = XLSX.readFile(`${path}/${filePath}`);\r\n+        let data3 = [];\r\n+        const sheets = file.SheetNames\r\n+        for (let i = 0; i < sheets.length; i++) {\r\n+            const temp = XLSX.utils.sheet_to_json(\r\n+                file.Sheets[file.SheetNames[i]])\r\n+            temp.forEach((res) => {\r\n+                data3.push(res)\r\n+            })\r\n+        }\r\n+        console.log(data3);\r\n+        return data;\r\n+    }\r\n+    catch (err) {\r\n+        console.log(err);\r\n+    }\r\n+}\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+  try{\r\n+    // 读取 Excel 文件\r\n+    const workbook = XLSX.readFile(filePath);\r\n+\r\n+    // 获取第一个 sheet\r\n+    const sheetName = workbook.SheetNames[0];\r\n+    const sheet = workbook.Sheets[sheetName];\r\n+\r\n+    // 定义存储题目的数组\r\n+    const questions: Question[] = [];\r\n+\r\n+    // 遍历 Excel 行\r\n+    for (let rowIndex = 2; ; rowIndex++) {\r\n+        const cell = sheet[`A${rowIndex}`];\r\n+\r\n+        // 如果没有内容，表示已经读取完毕\r\n+        if (!cell || !cell.v) {\r\n+        break;\r\n+        }\r\n+\r\n+        // 获取题目信息\r\n+        const questionNumber: number = cell.v;\r\n+        const questionText: string = sheet[`B${rowIndex}`].v;\r\n+        const optionA: string = sheet[`C${rowIndex}`].v;\r\n+        const optionB: string = sheet[`D${rowIndex}`].v;\r\n+        const optionC: string = sheet[`E${rowIndex}`].v;\r\n+\r\n+        // 存储题目信息\r\n+        const question: Question = {\r\n+        number: questionNumber,\r\n+        text: questionText,\r\n+        options: {\r\n+            A: optionA,\r\n+            B: optionB,\r\n+            C: optionC,\r\n+        },\r\n+        };\r\n+\r\n+        questions.push(question);\r\n+    }\r\n+    return questions;\r\n+  }catch(error){\r\n+    console.error('Error reading Excel file:', error);\r\n+    return [];\r\n+  }\r\n+    \r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+let filePath: string = 'src/assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n+\r\n+  \r\n"
                },
                {
                    "date": 1702995899531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 22:24:12\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n+  text: string;\r\n+  options: Option;\r\n+}\r\n+\r\n+export const readExcelFile = async (filePath: string) => {\r\n+    try {\r\n+        const path = 'src/assets/problems';\r\n+        const file = XLSX.readFile(`${path}/${filePath}`);\r\n+        let data3 = [];\r\n+        const sheets = file.SheetNames\r\n+        for (let i = 0; i < sheets.length; i++) {\r\n+            const temp = XLSX.utils.sheet_to_json(\r\n+                file.Sheets[file.SheetNames[i]])\r\n+            temp.forEach((res) => {\r\n+                data3.push(res)\r\n+            })\r\n+        }\r\n+        console.log(data3);\r\n+        return data3;\r\n+    }\r\n+    catch (err) {\r\n+        console.log(err);\r\n+    }\r\n+}\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+  try{\r\n+    // 读取 Excel 文件\r\n+    const workbook = XLSX.readFile(filePath);\r\n+\r\n+    // 获取第一个 sheet\r\n+    const sheetName = workbook.SheetNames[0];\r\n+    const sheet = workbook.Sheets[sheetName];\r\n+\r\n+    // 定义存储题目的数组\r\n+    const questions: Question[] = [];\r\n+\r\n+    // 遍历 Excel 行\r\n+    for (let rowIndex = 2; ; rowIndex++) {\r\n+        const cell = sheet[`A${rowIndex}`];\r\n+\r\n+        // 如果没有内容，表示已经读取完毕\r\n+        if (!cell || !cell.v) {\r\n+        break;\r\n+        }\r\n+\r\n+        // 获取题目信息\r\n+        const questionNumber: number = cell.v;\r\n+        const questionText: string = sheet[`B${rowIndex}`].v;\r\n+        const optionA: string = sheet[`C${rowIndex}`].v;\r\n+        const optionB: string = sheet[`D${rowIndex}`].v;\r\n+        const optionC: string = sheet[`E${rowIndex}`].v;\r\n+\r\n+        // 存储题目信息\r\n+        const question: Question = {\r\n+        number: questionNumber,\r\n+        text: questionText,\r\n+        options: {\r\n+            A: optionA,\r\n+            B: optionB,\r\n+            C: optionC,\r\n+        },\r\n+        };\r\n+\r\n+        questions.push(question);\r\n+    }\r\n+    return questions;\r\n+  }catch(error){\r\n+    console.error('Error reading Excel file:', error);\r\n+    return [];\r\n+  }\r\n+    \r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+let filePath: string = 'src/assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n+\r\n+  \r\n"
                },
                {
                    "date": 1702995908762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,308 +23,8 @@\n export const readExcelFile = async (filePath: string) => {\r\n     try {\r\n         const path = 'src/assets/problems';\r\n         const file = XLSX.readFile(`${path}/${filePath}`);\r\n-        let data3 = [];\r\n-        const sheets = file.SheetNames\r\n-        for (let i = 0; i < sheets.length; i++) {\r\n-            const temp = XLSX.utils.sheet_to_json(\r\n-                file.Sheets[file.SheetNames[i]])\r\n-            temp.forEach((res) => {\r\n-                data3.push(res)\r\n-            })\r\n-        }\r\n-        console.log(data3);\r\n-        return data3;\r\n-    }\r\n-    catch (err) {\r\n-        console.log(err);\r\n-    }\r\n-}\r\n-\r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-    // 读取 Excel 文件\r\n-    const workbook = XLSX.readFile(filePath);\r\n-\r\n-    // 获取第一个 sheet\r\n-    const sheetName = workbook.SheetNames[0];\r\n-    const sheet = workbook.Sheets[sheetName];\r\n-\r\n-    // 定义存储题目的数组\r\n-    const questions: Question[] = [];\r\n-\r\n-    // 遍历 Excel 行\r\n-    for (let rowIndex = 2; ; rowIndex++) {\r\n-        const cell = sheet[`A${rowIndex}`];\r\n-\r\n-        // 如果没有内容，表示已经读取完毕\r\n-        if (!cell || !cell.v) {\r\n-        break;\r\n-        }\r\n-\r\n-        // 获取题目信息\r\n-        const questionNumber: number = cell.v;\r\n-        const questionText: string = sheet[`B${rowIndex}`].v;\r\n-        const optionA: string = sheet[`C${rowIndex}`].v;\r\n-        const optionB: string = sheet[`D${rowIndex}`].v;\r\n-        const optionC: string = sheet[`E${rowIndex}`].v;\r\n-\r\n-        // 存储题目信息\r\n-        const question: Question = {\r\n-        number: questionNumber,\r\n-        text: questionText,\r\n-        options: {\r\n-            A: optionA,\r\n-            B: optionB,\r\n-            C: optionC,\r\n-        },\r\n-        };\r\n-\r\n-        questions.push(question);\r\n-    }\r\n-    return questions;\r\n-  }catch(error){\r\n-    console.error('Error reading Excel file:', error);\r\n-    return [];\r\n-  }\r\n-    \r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-let filePath: string = 'src/assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n-\r\n-  \r\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:24:12\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n-\r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-\r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n-\r\n-export const readExcelFile = async (filePath: string) => {\r\n-    try {\r\n-        const path = 'src/assets/problems';\r\n-        const file = XLSX.readFile(`${path}/${filePath}`);\r\n-        let data3 = [];\r\n-        const sheets = file.SheetNames\r\n-        for (let i = 0; i < sheets.length; i++) {\r\n-            const temp = XLSX.utils.sheet_to_json(\r\n-                file.Sheets[file.SheetNames[i]])\r\n-            temp.forEach((res) => {\r\n-                data3.push(res)\r\n-            })\r\n-        }\r\n-        console.log(data3);\r\n-        return data;\r\n-    }\r\n-    catch (err) {\r\n-        console.log(err);\r\n-    }\r\n-}\r\n-\r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-    // 读取 Excel 文件\r\n-    const workbook = XLSX.readFile(filePath);\r\n-\r\n-    // 获取第一个 sheet\r\n-    const sheetName = workbook.SheetNames[0];\r\n-    const sheet = workbook.Sheets[sheetName];\r\n-\r\n-    // 定义存储题目的数组\r\n-    const questions: Question[] = [];\r\n-\r\n-    // 遍历 Excel 行\r\n-    for (let rowIndex = 2; ; rowIndex++) {\r\n-        const cell = sheet[`A${rowIndex}`];\r\n-\r\n-        // 如果没有内容，表示已经读取完毕\r\n-        if (!cell || !cell.v) {\r\n-        break;\r\n-        }\r\n-\r\n-        // 获取题目信息\r\n-        const questionNumber: number = cell.v;\r\n-        const questionText: string = sheet[`B${rowIndex}`].v;\r\n-        const optionA: string = sheet[`C${rowIndex}`].v;\r\n-        const optionB: string = sheet[`D${rowIndex}`].v;\r\n-        const optionC: string = sheet[`E${rowIndex}`].v;\r\n-\r\n-        // 存储题目信息\r\n-        const question: Question = {\r\n-        number: questionNumber,\r\n-        text: questionText,\r\n-        options: {\r\n-            A: optionA,\r\n-            B: optionB,\r\n-            C: optionC,\r\n-        },\r\n-        };\r\n-\r\n-        questions.push(question);\r\n-    }\r\n-    return questions;\r\n-  }catch(error){\r\n-    console.error('Error reading Excel file:', error);\r\n-    return [];\r\n-  }\r\n-    \r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-let filePath: string = 'src/assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n-\r\n-  \r\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:24:12\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n-\r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-\r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n-\r\n-export const readExcelFile = async (filePath: string) => {\r\n-    try {\r\n-        const path = 'src/assets/problems';\r\n-        const file = XLSX.readFile(`${path}/${filePath}`);\r\n-        let data3 = [];\r\n-        const sheets = file.SheetNames\r\n-        for (let i = 0; i < sheets.length; i++) {\r\n-            const temp = XLSX.utils.sheet_to_json(\r\n-                file.Sheets[file.SheetNames[i]])\r\n-            temp.forEach((res) => {\r\n-                data.push(res)\r\n-            })\r\n-        }\r\n-        console.log(data);\r\n-        return data;\r\n-    }\r\n-    catch (err) {\r\n-        console.log(err);\r\n-    }\r\n-}\r\n-\r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-    // 读取 Excel 文件\r\n-    const workbook = XLSX.readFile(filePath);\r\n-\r\n-    // 获取第一个 sheet\r\n-    const sheetName = workbook.SheetNames[0];\r\n-    const sheet = workbook.Sheets[sheetName];\r\n-\r\n-    // 定义存储题目的数组\r\n-    const questions: Question[] = [];\r\n-\r\n-    // 遍历 Excel 行\r\n-    for (let rowIndex = 2; ; rowIndex++) {\r\n-        const cell = sheet[`A${rowIndex}`];\r\n-\r\n-        // 如果没有内容，表示已经读取完毕\r\n-        if (!cell || !cell.v) {\r\n-        break;\r\n-        }\r\n-\r\n-        // 获取题目信息\r\n-        const questionNumber: number = cell.v;\r\n-        const questionText: string = sheet[`B${rowIndex}`].v;\r\n-        const optionA: string = sheet[`C${rowIndex}`].v;\r\n-        const optionB: string = sheet[`D${rowIndex}`].v;\r\n-        const optionC: string = sheet[`E${rowIndex}`].v;\r\n-\r\n-        // 存储题目信息\r\n-        const question: Question = {\r\n-        number: questionNumber,\r\n-        text: questionText,\r\n-        options: {\r\n-            A: optionA,\r\n-            B: optionB,\r\n-            C: optionC,\r\n-        },\r\n-        };\r\n-\r\n-        questions.push(question);\r\n-    }\r\n-    return questions;\r\n-  }catch(error){\r\n-    console.error('Error reading Excel file:', error);\r\n-    return [];\r\n-  }\r\n-    \r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-let filePath: string = 'src/assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n-\r\n-  \r\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:24:12\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n-\r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-\r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n-\r\n-export const readExcelFile = async (filePath: string) => {\r\n-    try {\r\n-        const path = 'src/assets/problems';\r\n-        const file = XLSX.readFile(`${path}/${filePath}`);\r\n         let data = [];\r\n         const sheets = file.SheetNames\r\n         for (let i = 0; i < sheets.length; i++) {\r\n             const temp = XLSX.utils.sheet_to_json(\r\n"
                },
                {
                    "date": 1702995966207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:24:12\r\n+ * @LastEditTime: 2023-12-19 22:26:06\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -19,29 +19,44 @@\n   text: string;\r\n   options: Option;\r\n }\r\n \r\n-export const readExcelFile = async (filePath: string) => {\r\n+interface ExcelData {\r\n+    // Define the structure of your Excel data here\r\n+    // For example:\r\n+    id: number;\r\n+    text: string;\r\n+    option1: string;\r\n+    option2: string;\r\n+    option3: string;\r\n+    option4: string;\r\n+    answer: string;\r\n+  }\r\n+  \r\n+  export const readExcelFile = async (filePath: string): Promise<ExcelData[]> => {\r\n     try {\r\n-        const path = 'src/assets/problems';\r\n-        const file = XLSX.readFile(`${path}/${filePath}`);\r\n-        let data = [];\r\n-        const sheets = file.SheetNames\r\n-        for (let i = 0; i < sheets.length; i++) {\r\n-            const temp = XLSX.utils.sheet_to_json(\r\n-                file.Sheets[file.SheetNames[i]])\r\n-            temp.forEach((res) => {\r\n-                data.push(res)\r\n-            })\r\n-        }\r\n-        console.log(data);\r\n-        return data;\r\n+      const path = 'src/assets/problems';\r\n+      const file = XLSX.readFile(`${path}/${filePath}`);\r\n+      let data: ExcelData[] = [];\r\n+      const sheets = file.SheetNames;\r\n+      \r\n+      for (let i = 0; i < sheets.length; i++) {\r\n+        const temp = XLSX.utils.sheet_to_json<ExcelData>(\r\n+          file.Sheets[file.SheetNames[i]]\r\n+        );\r\n+        temp.forEach((res) => {\r\n+          data.push(res);\r\n+        });\r\n+      }\r\n+  \r\n+      console.log(data);\r\n+      return data;\r\n+    } catch (err) {\r\n+      console.log(err);\r\n+      // Ensure to handle errors properly, e.g., by returning an empty array or throwing an error\r\n+      return [];\r\n     }\r\n-    catch (err) {\r\n-        console.log(err);\r\n-    }\r\n-}\r\n-\r\n+  };\r\n export function readExcel(filePath: string): Question[] {\r\n   try{\r\n     // 读取 Excel 文件\r\n     const workbook = XLSX.readFile(filePath);\r\n"
                },
                {
                    "date": 1702995989481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,10 @@\n       // Ensure to handle errors properly, e.g., by returning an empty array or throwing an error\r\n       return [];\r\n     }\r\n   };\r\n+\r\n+  \r\n export function readExcel(filePath: string): Question[] {\r\n   try{\r\n     // 读取 Excel 文件\r\n     const workbook = XLSX.readFile(filePath);\r\n"
                },
                {
                    "date": 1702995994572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,10 +55,8 @@\n       // Ensure to handle errors properly, e.g., by returning an empty array or throwing an error\r\n       return [];\r\n     }\r\n   };\r\n-\r\n-  \r\n export function readExcel(filePath: string): Question[] {\r\n   try{\r\n     // 读取 Excel 文件\r\n     const workbook = XLSX.readFile(filePath);\r\n"
                },
                {
                    "date": 1702996026507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:26:06\r\n+ * @LastEditTime: 2023-12-19 22:27:06\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -19,44 +19,29 @@\n   text: string;\r\n   options: Option;\r\n }\r\n \r\n-interface ExcelData {\r\n-    // Define the structure of your Excel data here\r\n-    // For example:\r\n-    id: number;\r\n-    text: string;\r\n-    option1: string;\r\n-    option2: string;\r\n-    option3: string;\r\n-    option4: string;\r\n-    answer: string;\r\n-  }\r\n-  \r\n-  export const readExcelFile = async (filePath: string): Promise<ExcelData[]> => {\r\n+export const readExcelFile = async (filePath: string) => {\r\n     try {\r\n-      const path = 'src/assets/problems';\r\n-      const file = XLSX.readFile(`${path}/${filePath}`);\r\n-      let data: ExcelData[] = [];\r\n-      const sheets = file.SheetNames;\r\n-      \r\n-      for (let i = 0; i < sheets.length; i++) {\r\n-        const temp = XLSX.utils.sheet_to_json<ExcelData>(\r\n-          file.Sheets[file.SheetNames[i]]\r\n-        );\r\n-        temp.forEach((res) => {\r\n-          data.push(res);\r\n-        });\r\n-      }\r\n-  \r\n-      console.log(data);\r\n-      return data;\r\n-    } catch (err) {\r\n-      console.log(err);\r\n-      // Ensure to handle errors properly, e.g., by returning an empty array or throwing an error\r\n-      return [];\r\n+        const path = 'src/assets/problems';\r\n+        const file = XLSX.readFile(`${path}/${filePath}`);\r\n+        let data = [];\r\n+        const sheets = file.SheetNames\r\n+        for (let i = 0; i < sheets.length; i++) {\r\n+            const temp = XLSX.utils.sheet_to_json(\r\n+                file.Sheets[file.SheetNames[i]])\r\n+            temp.forEach((res) => {\r\n+                data.push(res)\r\n+            })\r\n+        }\r\n+        console.log(data);\r\n+        return data;\r\n     }\r\n-  };\r\n+    catch (err) {\r\n+        console.log(err);\r\n+    }\r\n+}\r\n+\r\n export function readExcel(filePath: string): Question[] {\r\n   try{\r\n     // 读取 Excel 文件\r\n     const workbook = XLSX.readFile(filePath);\r\n"
                },
                {
                    "date": 1702996046562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+/*\r\n+ * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @Date: 2023-12-19 21:26:08\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-19 22:23:05\r\n+ * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+ */\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+interface Option {\r\n+  A: string;\r\n+  B: string;\r\n+  C: string;\r\n+}\r\n+\r\n+export interface Question {\r\n+  number: number;\r\n+  text: string;\r\n+  options: Option;\r\n+}\r\n+\r\n+export const readExcelFile = async (filePath: string) => {\r\n+    try {\r\n+        const path = 'src/assets/problems';\r\n+        const file = XLSX.readFile(`${path}/${filePath}`);\r\n+        let data = [];\r\n+        const sheets = file.SheetNames\r\n+        for (let i = 0; i < sheets.length; i++) {\r\n+            const temp = XLSX.utils.sheet_to_json(\r\n+                file.Sheets[file.SheetNames[i]])\r\n+            temp.forEach((res) => {\r\n+                data.push(res)\r\n+            })\r\n+        }\r\n+        console.log(data);\r\n+        return data;\r\n+    }\r\n+    catch (err) {\r\n+        console.log(err);\r\n+    }\r\n+}\r\n+\r\n+export function readExcel(filePath: string): Question[] {\r\n+  try{\r\n+    // 读取 Excel 文件\r\n+    const workbook = XLSX.readFile(filePath);\r\n+\r\n+    // 获取第一个 sheet\r\n+    const sheetName = workbook.SheetNames[0];\r\n+    const sheet = workbook.Sheets[sheetName];\r\n+\r\n+    // 定义存储题目的数组\r\n+    const questions: Question[] = [];\r\n+\r\n+    // 遍历 Excel 行\r\n+    for (let rowIndex = 2; ; rowIndex++) {\r\n+        const cell = sheet[`A${rowIndex}`];\r\n+\r\n+        // 如果没有内容，表示已经读取完毕\r\n+        if (!cell || !cell.v) {\r\n+        break;\r\n+        }\r\n+\r\n+        // 获取题目信息\r\n+        const questionNumber: number = cell.v;\r\n+        const questionText: string = sheet[`B${rowIndex}`].v;\r\n+        const optionA: string = sheet[`C${rowIndex}`].v;\r\n+        const optionB: string = sheet[`D${rowIndex}`].v;\r\n+        const optionC: string = sheet[`E${rowIndex}`].v;\r\n+\r\n+        // 存储题目信息\r\n+        const question: Question = {\r\n+        number: questionNumber,\r\n+        text: questionText,\r\n+        options: {\r\n+            A: optionA,\r\n+            B: optionB,\r\n+            C: optionC,\r\n+        },\r\n+        };\r\n+\r\n+        questions.push(question);\r\n+    }\r\n+    return questions;\r\n+  }catch(error){\r\n+    console.error('Error reading Excel file:', error);\r\n+    return [];\r\n+  }\r\n+    \r\n+}\r\n+\r\n+// 读取 Excel 文件\r\n+let filePath: string = 'src/assets/problems/1.xlsx';\r\n+const questions: Question[] = readExcel(filePath);\r\n+\r\n+// 打印题目信息\r\n+console.log(questions);\r\n+\r\n+  \r\n"
                },
                {
                    "date": 1702996056132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,108 +1,8 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:23:05\r\n- * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n- */\r\n-import * as XLSX from 'xlsx';\r\n-\r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-\r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n-\r\n-export const readExcelFile = async (filePath: string) => {\r\n-    try {\r\n-        const path = 'src/assets/problems';\r\n-        const file = XLSX.readFile(`${path}/${filePath}`);\r\n-        let data = [];\r\n-        const sheets = file.SheetNames\r\n-        for (let i = 0; i < sheets.length; i++) {\r\n-            const temp = XLSX.utils.sheet_to_json(\r\n-                file.Sheets[file.SheetNames[i]])\r\n-            temp.forEach((res) => {\r\n-                data.push(res)\r\n-            })\r\n-        }\r\n-        console.log(data);\r\n-        return data;\r\n-    }\r\n-    catch (err) {\r\n-        console.log(err);\r\n-    }\r\n-}\r\n-\r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-    // 读取 Excel 文件\r\n-    const workbook = XLSX.readFile(filePath);\r\n-\r\n-    // 获取第一个 sheet\r\n-    const sheetName = workbook.SheetNames[0];\r\n-    const sheet = workbook.Sheets[sheetName];\r\n-\r\n-    // 定义存储题目的数组\r\n-    const questions: Question[] = [];\r\n-\r\n-    // 遍历 Excel 行\r\n-    for (let rowIndex = 2; ; rowIndex++) {\r\n-        const cell = sheet[`A${rowIndex}`];\r\n-\r\n-        // 如果没有内容，表示已经读取完毕\r\n-        if (!cell || !cell.v) {\r\n-        break;\r\n-        }\r\n-\r\n-        // 获取题目信息\r\n-        const questionNumber: number = cell.v;\r\n-        const questionText: string = sheet[`B${rowIndex}`].v;\r\n-        const optionA: string = sheet[`C${rowIndex}`].v;\r\n-        const optionB: string = sheet[`D${rowIndex}`].v;\r\n-        const optionC: string = sheet[`E${rowIndex}`].v;\r\n-\r\n-        // 存储题目信息\r\n-        const question: Question = {\r\n-        number: questionNumber,\r\n-        text: questionText,\r\n-        options: {\r\n-            A: optionA,\r\n-            B: optionB,\r\n-            C: optionC,\r\n-        },\r\n-        };\r\n-\r\n-        questions.push(question);\r\n-    }\r\n-    return questions;\r\n-  }catch(error){\r\n-    console.error('Error reading Excel file:', error);\r\n-    return [];\r\n-  }\r\n-    \r\n-}\r\n-\r\n-// 读取 Excel 文件\r\n-let filePath: string = 'src/assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n-\r\n-// 打印题目信息\r\n-console.log(questions);\r\n-\r\n-  \r\n-/*\r\n- * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @Date: 2023-12-19 21:26:08\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @LastEditTime: 2023-12-19 22:27:06\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n"
                },
                {
                    "date": 1702996197293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:27:06\r\n+ * @LastEditTime: 2023-12-19 22:29:57\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -19,29 +19,8 @@\n   text: string;\r\n   options: Option;\r\n }\r\n \r\n-export const readExcelFile = async (filePath: string) => {\r\n-    try {\r\n-        const path = 'src/assets/problems';\r\n-        const file = XLSX.readFile(`${path}/${filePath}`);\r\n-        let data = [];\r\n-        const sheets = file.SheetNames\r\n-        for (let i = 0; i < sheets.length; i++) {\r\n-            const temp = XLSX.utils.sheet_to_json(\r\n-                file.Sheets[file.SheetNames[i]])\r\n-            temp.forEach((res) => {\r\n-                data.push(res)\r\n-            })\r\n-        }\r\n-        console.log(data);\r\n-        return data;\r\n-    }\r\n-    catch (err) {\r\n-        console.log(err);\r\n-    }\r\n-}\r\n-\r\n export function readExcel(filePath: string): Question[] {\r\n   try{\r\n     // 读取 Excel 文件\r\n     const workbook = XLSX.readFile(filePath);\r\n"
                },
                {
                    "date": 1702997411559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:29:57\r\n+ * @LastEditTime: 2023-12-19 22:50:10\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -12,8 +12,9 @@\n   A: string;\r\n   B: string;\r\n   C: string;\r\n }\r\n+const excelFilePath = '../assets/problems/1.xlsx';\r\n \r\n export interface Question {\r\n   number: number;\r\n   text: string;\r\n"
                },
                {
                    "date": 1703045760138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-19 22:50:10\r\n+ * @LastEditTime: 2023-12-20 12:16:00\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -77,4 +77,39 @@\n // 打印题目信息\r\n console.log(questions);\r\n \r\n   \r\n+const XLSX = require('xlsx')\r\n+\r\n+//将行,列转换\r\n+function transformSheets(sheets) {\r\n+ var content = []\r\n+ var content1 = []\r\n+ var tmplist = []\r\n+ for (let key in sheets){\r\n+  //读出来的workbook数据很难读,转换为json格式,参考https://github.com/SheetJS/js-xlsx#utility-functions\r\n+  tmplist.push(XLSX.utils.sheet_to_json(sheets[key]).length)\r\n+  content1.push(XLSX.utils.sheet_to_json(sheets[key]))\r\n+ }\r\n+ var maxLength = Math.max.apply(Math, tmplist)\r\n+ //进行行列转换\r\n+ for (let y in [...Array(maxLength)]){\r\n+  content.push([])\r\n+  for (let x in [...Array(tmplist.length)]) {\r\n+   try {\r\n+    for (let z in content1[x][y]){\r\n+     content[y].push(content1[x][y][z])\r\n+    }\r\n+   } catch (error) {\r\n+    content[y].push(' ')\r\n+   }\r\n+  }\r\n+ }\r\n+ content.unshift([])\r\n+ for (let key in sheets){\r\n+  content[0].push(key)\r\n+ }\r\n+ return content\r\n+\r\n+}\r\n+\r\n+export {transformSheets as default}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703046201133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,115 +1,119 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-20 12:16:00\r\n+ * @LastEditTime: 2023-12-20 12:23:21\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n \r\n-interface Option {\r\n-  A: string;\r\n-  B: string;\r\n-  C: string;\r\n-}\r\n-const excelFilePath = '../assets/problems/1.xlsx';\r\n+// interface Option {\r\n+//   A: string;\r\n+//   B: string;\r\n+//   C: string;\r\n+// }\r\n+// const excelFilePath = '../assets/problems/1.xlsx';\r\n \r\n-export interface Question {\r\n-  number: number;\r\n-  text: string;\r\n-  options: Option;\r\n-}\r\n+// export interface Question {\r\n+//   number: number;\r\n+//   text: string;\r\n+//   options: Option;\r\n+// }\r\n \r\n-export function readExcel(filePath: string): Question[] {\r\n-  try{\r\n-    // 读取 Excel 文件\r\n-    const workbook = XLSX.readFile(filePath);\r\n+// export function readExcel(filePath: string): Question[] {\r\n+//   try{\r\n+//     // 读取 Excel 文件\r\n+//     const workbook = XLSX.readFile(filePath);\r\n \r\n-    // 获取第一个 sheet\r\n-    const sheetName = workbook.SheetNames[0];\r\n-    const sheet = workbook.Sheets[sheetName];\r\n+//     // 获取第一个 sheet\r\n+//     const sheetName = workbook.SheetNames[0];\r\n+//     const sheet = workbook.Sheets[sheetName];\r\n \r\n-    // 定义存储题目的数组\r\n-    const questions: Question[] = [];\r\n+//     // 定义存储题目的数组\r\n+//     const questions: Question[] = [];\r\n \r\n-    // 遍历 Excel 行\r\n-    for (let rowIndex = 2; ; rowIndex++) {\r\n-        const cell = sheet[`A${rowIndex}`];\r\n+//     // 遍历 Excel 行\r\n+//     for (let rowIndex = 2; ; rowIndex++) {\r\n+//         const cell = sheet[`A${rowIndex}`];\r\n \r\n-        // 如果没有内容，表示已经读取完毕\r\n-        if (!cell || !cell.v) {\r\n-        break;\r\n-        }\r\n+//         // 如果没有内容，表示已经读取完毕\r\n+//         if (!cell || !cell.v) {\r\n+//         break;\r\n+//         }\r\n \r\n-        // 获取题目信息\r\n-        const questionNumber: number = cell.v;\r\n-        const questionText: string = sheet[`B${rowIndex}`].v;\r\n-        const optionA: string = sheet[`C${rowIndex}`].v;\r\n-        const optionB: string = sheet[`D${rowIndex}`].v;\r\n-        const optionC: string = sheet[`E${rowIndex}`].v;\r\n+//         // 获取题目信息\r\n+//         const questionNumber: number = cell.v;\r\n+//         const questionText: string = sheet[`B${rowIndex}`].v;\r\n+//         const optionA: string = sheet[`C${rowIndex}`].v;\r\n+//         const optionB: string = sheet[`D${rowIndex}`].v;\r\n+//         const optionC: string = sheet[`E${rowIndex}`].v;\r\n \r\n-        // 存储题目信息\r\n-        const question: Question = {\r\n-        number: questionNumber,\r\n-        text: questionText,\r\n-        options: {\r\n-            A: optionA,\r\n-            B: optionB,\r\n-            C: optionC,\r\n-        },\r\n-        };\r\n+//         // 存储题目信息\r\n+//         const question: Question = {\r\n+//         number: questionNumber,\r\n+//         text: questionText,\r\n+//         options: {\r\n+//             A: optionA,\r\n+//             B: optionB,\r\n+//             C: optionC,\r\n+//         },\r\n+//         };\r\n \r\n-        questions.push(question);\r\n-    }\r\n-    return questions;\r\n-  }catch(error){\r\n-    console.error('Error reading Excel file:', error);\r\n-    return [];\r\n-  }\r\n+//         questions.push(question);\r\n+//     }\r\n\\ No newline at end of file\n+//     return questions;\r\n+//   }catch(error){\r\n+//     console.error('Error reading Excel file:', error);\r\n+//     return [];\r\n+//   }\r\n     \r\n-}\r\n+// }\r\n \r\n-// 读取 Excel 文件\r\n-let filePath: string = 'src/assets/problems/1.xlsx';\r\n-const questions: Question[] = readExcel(filePath);\r\n+// // 读取 Excel 文件\r\n+// let filePath: string = 'src/assets/problems/1.xlsx';\r\n+// const questions: Question[] = readExcel(filePath);\r\n \r\n-// 打印题目信息\r\n-console.log(questions);\r\n+// // 打印题目信息\r\n+// console.log(questions);\r\n \r\n   \r\n-const XLSX = require('xlsx')\r\n+import * as XLSX from 'xlsx';\r\n \r\n //将行,列转换\r\n-function transformSheets(sheets) {\r\n- var content = []\r\n- var content1 = []\r\n- var tmplist = []\r\n- for (let key in sheets){\r\n-  //读出来的workbook数据很难读,转换为json格式,参考https://github.com/SheetJS/js-xlsx#utility-functions\r\n-  tmplist.push(XLSX.utils.sheet_to_json(sheets[key]).length)\r\n-  content1.push(XLSX.utils.sheet_to_json(sheets[key]))\r\n- }\r\n- var maxLength = Math.max.apply(Math, tmplist)\r\n- //进行行列转换\r\n- for (let y in [...Array(maxLength)]){\r\n-  content.push([])\r\n-  for (let x in [...Array(tmplist.length)]) {\r\n-   try {\r\n-    for (let z in content1[x][y]){\r\n-     content[y].push(content1[x][y][z])\r\n-    }\r\n-   } catch (error) {\r\n-    content[y].push(' ')\r\n-   }\r\n-  }\r\n- }\r\n- content.unshift([])\r\n- for (let key in sheets){\r\n-  content[0].push(key)\r\n- }\r\n- return content\r\n+function transformSheets(sheets: XLSX.Sheets): any[] {\r\n+const content: any[] = [];\r\n+const content1: any[] = [];\r\n+const tmplist: number[] = [];\r\n \r\n+for (const key in sheets) {\r\n+//读出来的workbook数据很难读,转换为json格式,参考https://github.com/SheetJS/js-xlsx#utility-functions\r\n+tmplist.push(XLSX.utils.sheet_to_json(sheets[key]).length);\r\n+content1.push(XLSX.utils.sheet_to_json(sheets[key]));\r\n }\r\n \r\n-export {transformSheets as default}\n+const maxLength = Math.max(...tmplist);\r\n+\r\n+//进行行列转换\r\n+for (const y in [...Array(maxLength)]) {\r\n+content.push([]);\r\n+for (const x in [...Array(tmplist.length)]) {\r\n+try {\r\n+for (const z in content1[x][y]) {\r\n+content[y].push(content1[x][y][z]);\r\n+}\r\n+} catch (error) {\r\n+content[y].push(' ');\r\n+}\r\n+}\r\n+}\r\n+\r\n+content.unshift([]);\r\n+for (const key in sheets) {\r\n+content[0].push(key);\r\n+}\r\n+\r\n+return content;\r\n+}\r\n+\r\n+export default transformSheets;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703046534376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n /*\r\n  * @Author: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n  * @Date: 2023-12-19 21:26:08\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-20 12:23:21\r\n+ * @LastEditTime: 2023-12-20 12:28:54\r\n  * @FilePath: \\hope-enroll\\src\\utils\\read.ts\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n  */\r\n import * as XLSX from 'xlsx';\r\n@@ -76,11 +76,10 @@\n \r\n // // 打印题目信息\r\n // console.log(questions);\r\n \r\n-  \r\n-import * as XLSX from 'xlsx';\r\n \r\n+\r\n //将行,列转换\r\n function transformSheets(sheets: XLSX.Sheets): any[] {\r\n const content: any[] = [];\r\n const content1: any[] = [];\r\n"
                },
                {
                    "date": 1703046585682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,41 +78,43 @@\n // console.log(questions);\r\n \r\n \r\n \r\n-//将行,列转换\r\n-function transformSheets(sheets: XLSX.Sheets): any[] {\r\n-const content: any[] = [];\r\n-const content1: any[] = [];\r\n-const tmplist: number[] = [];\r\n+import * as XLSX from 'xlsx';\r\n \r\n-for (const key in sheets) {\r\n-//读出来的workbook数据很难读,转换为json格式,参考https://github.com/SheetJS/js-xlsx#utility-functions\r\n-tmplist.push(XLSX.utils.sheet_to_json(sheets[key]).length);\r\n-content1.push(XLSX.utils.sheet_to_json(sheets[key]));\r\n-}\r\n+// 将行,列转换\r\n+function transformSheets(sheets: { [key: string]: XLSX.WorkSheet }): any[][] {\r\n+  const content: any[][] = [];\r\n+  const content1: any[][][] = [];\r\n+  const tmplist: number[] = [];\r\n \r\n-const maxLength = Math.max(...tmplist);\r\n+  for (const key in sheets) {\r\n+    // 读出来的 workbook 数据很难读, 转换为 JSON 格式, 参考 https://github.com/SheetJS/js-xlsx#utility-functions\r\n+    tmplist.push(XLSX.utils.sheet_to_json(sheets[key]).length);\r\n+    content1.push(XLSX.utils.sheet_to_json(sheets[key]));\r\n+  }\r\n \r\n-//进行行列转换\r\n-for (const y in [...Array(maxLength)]) {\r\n-content.push([]);\r\n-for (const x in [...Array(tmplist.length)]) {\r\n-try {\r\n-for (const z in content1[x][y]) {\r\n-content[y].push(content1[x][y][z]);\r\n-}\r\n-} catch (error) {\r\n-content[y].push(' ');\r\n-}\r\n-}\r\n\\ No newline at end of file\n-}\r\n+  const maxLength = Math.max(...tmplist);\r\n \r\n-content.unshift([]);\r\n-for (const key in sheets) {\r\n-content[0].push(key);\r\n-}\r\n+  // 进行行列转换\r\n+  for (const y of Array(maxLength).keys()) {\r\n+    content.push([]);\r\n+    for (const x of Array(tmplist.length).keys()) {\r\n+      try {\r\n+        for (const z in content1[x][y]) {\r\n+          content[y].push(content1[x][y][z]);\r\n+        }\r\n+      } catch (error) {\r\n+        content[y].push(' ');\r\n+      }\r\n+    }\r\n+  }\r\n \r\n-return content;\r\n+  content.unshift([]);\r\n+  for (const key in sheets) {\r\n+    content[0].push(key);\r\n+  }\r\n+\r\n+  return content;\r\n }\r\n \r\n-export default transformSheets;\n+export default transformSheets;\r\n"
                }
            ],
            "date": 1702992373366,
            "name": "Commit-0",
            "content": "import * as XLSX from 'xlsx';\r\nimport * as fs from 'fs';\r\n\r\ninterface Option {\r\n  A: string;\r\n  B: string;\r\n  C: string;\r\n}\r\n\r\ninterface Question {\r\n  number: number;\r\n  text: string;\r\n  options: Option;\r\n}\r\n\r\nfunction readExcel(filePath: string): Question[] {\r\n  // 读取 Excel 文件\r\n  const workbook = XLSX.readFile(filePath);\r\n\r\n  // 获取第一个 sheet\r\n  const sheetName = workbook.SheetNames[0];\r\n  const sheet = workbook.Sheets[sheetName];\r\n\r\n  // 定义存储题目的数组\r\n  const questions: Question[] = [];\r\n\r\n  // 遍历 Excel 行\r\n  for (let rowIndex = 2; ; rowIndex++) {\r\n    const cell = sheet[`A${rowIndex}`];\r\n\r\n    // 如果没有内容，表示已经读取完毕\r\n    if (!cell || !cell.v) {\r\n      break;\r\n    }\r\n\r\n    // 获取题目信息\r\n    const questionNumber: number = cell.v;\r\n    const questionText: string = sheet[`B${rowIndex}`].v;\r\n    const optionA: string = sheet[`C${rowIndex}`].v;\r\n    const optionB: string = sheet[`D${rowIndex}`].v;\r\n    const optionC: string = sheet[`E${rowIndex}`].v;\r\n\r\n    // 存储题目信息\r\n    const question: Question = {\r\n      number: questionNumber,\r\n      text: questionText,\r\n      options: {\r\n        A: optionA,\r\n        B: optionB,\r\n        C: optionC,\r\n      },\r\n    };\r\n\r\n    questions.push(question);\r\n  }\r\n\r\n  return questions;\r\n}\r\n\r\n// 读取 Excel 文件\r\nconst filePath: string = 'path/to/your/excel/file.xlsx';\r\nconst questions: Question[] = readExcel(filePath);\r\n\r\n// 打印题目信息\r\nconsole.log(questions);\r\n"
        }
    ]
}