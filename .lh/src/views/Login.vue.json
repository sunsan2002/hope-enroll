{
    "sourceFile": "src/views/Login.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1702387234448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702387259012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+<!--\r\n+ * @Author: sunsan 2390864551@qq.com\r\n+ * @Date: 2023-11-07 20:46:44\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-12 21:20:34\r\n+ * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n+ * @Description: 登录页面\r\n+-->\r\n+<template>\r\n+  <div class=\"box\">\r\n+    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n+        <el-form :model=\"form\">\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n+          </el-form-item>\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n+          </el-form-item>\r\n+        </el-form>\r\n+        <div class=\"button\">\r\n+          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n+        </div>\r\n+    </el-dialog>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script lang=\"ts\" setup>\r\n+import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n+import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n+import apiFun from '../utils/api';\r\n+import { ElMessage } from \"element-plus\";\r\n+\r\n+\r\n+// 使用 props 获取父组件传递过来的数据\r\n+// const props = defineProps(['dialog']);\r\n+const dialog = ref(false);\r\n+\r\n+let form = reactive({\r\n+  username: '',\r\n+  password: '',\r\n+})\r\n+\r\n+function change(){\r\n+\tdialog.value = true;\r\n+}\r\n+\r\n+function login(){\r\n+  console.log(form)\r\n+\r\n+  apiFun.user.login({\r\n+      username: form.username,\r\n+      password: form.password,\r\n+    })\r\n+    .then((res: any) => {\r\n+      console.log(res);\r\n+      let token = res.data;\r\n+      // window.localStorage.setItem(\"token\", token);\r\n+      localSet(\"token\", token);\r\n+      //解析token\r\n+      const decode = jwt_decode(token);\r\n+      console.log(\"token解析内容\", decode); //decode是一个对象\r\n+      //把解析后的token内容放进store中\r\n+      // useStore.id = decode.id;\r\n+      // useStore.username = decode.username;\r\n+      // useStore.token = token;\r\n+\r\n+      if(res.code === 200){\r\n+        ElMessage.success(\"登录成功\");\r\n+        this.$router.push('/')\r\n+        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n+      }else{\r\n+        console.log(res.message)\r\n+        ElMessage.error(\"登录失败\");\r\n+        // router.push({ path: \"/home\" }); //跳转到主页面\r\n+      }\r\n+    }).catch((err: any)=>{\r\n+      console.log(err);\r\n+    });\r\n+  \r\n+  dialog.value = false;\r\n+}\r\n+\r\n+onMounted(() => {\r\n+  \r\n+});\r\n+\r\n+\r\n+defineExpose({\r\n+  change\r\n+})\r\n+\r\n+\r\n+</script>\r\n+\r\n+<style lang=\"scss\" scoped>\r\n+// .box{\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   align-items: center;\r\n+// }\r\n+// .el-dialog{\r\n+//   height:50%;\r\n+// }\r\n+// .el-input {\r\n+//   width: 80%;\r\n+//   margin: 0 auto;\r\n+// }\r\n+\r\n+// .button {\r\n+//   width: 100%;\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   margin-top: 25px; \r\n+//   margin-bottom: 20px;\r\n+//   .el-button{\r\n+//     margin: 0 auto;\r\n+//     width: 80%;\r\n+//   }\r\n+// }\r\n+</style>\r\n"
                },
                {
                    "date": 1702387415640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <!--\r\n  * @Author: sunsan 2390864551@qq.com\r\n  * @Date: 2023-11-07 20:46:44\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:20:34\r\n+ * @LastEditTime: 2023-12-12 21:23:35\r\n  * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n  * @Description: 登录页面\r\n -->\r\n <template>\r\n@@ -54,9 +54,8 @@\n     .then((res: any) => {\r\n       console.log(res);\r\n       let token = res.data;\r\n       // window.localStorage.setItem(\"token\", token);\r\n-      localSet(\"token\", token);\r\n       //解析token\r\n       const decode = jwt_decode(token);\r\n       console.log(\"token解析内容\", decode); //decode是一个对象\r\n       //把解析后的token内容放进store中\r\n@@ -117,123 +116,4 @@\n //     width: 80%;\r\n //   }\r\n // }\r\n </style>\r\n-<!--\r\n- * @Author: sunsan 2390864551@qq.com\r\n- * @Date: 2023-11-07 20:46:44\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:20:34\r\n- * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n- * @Description: 登录页面\r\n--->\r\n-<template>\r\n-  <div class=\"box\">\r\n-    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n-        <el-form :model=\"form\">\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n-          </el-form-item>\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n-          </el-form-item>\r\n-        </el-form>\r\n-        <div class=\"button\">\r\n-          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n-        </div>\r\n-    </el-dialog>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script lang=\"ts\" setup>\r\n-import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n-import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n-import apiFun from '../utils/api';\r\n-\r\n-\r\n-// 使用 props 获取父组件传递过来的数据\r\n-// const props = defineProps(['dialog']);\r\n-const dialog = ref(false);\r\n-\r\n-let form = reactive({\r\n-  username: '',\r\n-  password: '',\r\n-})\r\n-\r\n-function change(){\r\n-\tdialog.value = true;\r\n-}\r\n-\r\n-function login(){\r\n-  console.log(form)\r\n-\r\n-  apiFun.user.login({\r\n-      username: form.username,\r\n-      password: form.password,\r\n-    })\r\n-    .then((res: any) => {\r\n-      console.log(res);\r\n-      let token = res.data;\r\n-      // window.localStorage.setItem(\"token\", token);\r\n-      localSet(\"token\", token);\r\n-      //解析token\r\n-      const decode = jwt_decode(token);\r\n-      console.log(\"token解析内容\", decode); //decode是一个对象\r\n-      //把解析后的token内容放进store中\r\n-      // useStore.id = decode.id;\r\n-      // useStore.username = decode.username;\r\n-      // useStore.token = token;\r\n-\r\n-      if(res.code === 200){\r\n-        ElMessage.success(\"登录成功\");\r\n-        this.$router.push('/')\r\n-        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n-      }else{\r\n-        console.log(res.message)\r\n-        ElMessage.error(\"登录失败\");\r\n-        // router.push({ path: \"/home\" }); //跳转到主页面\r\n-      }\r\n-    }).catch((err: any)=>{\r\n-      console.log(err);\r\n-    });\r\n-  \r\n-  dialog.value = false;\r\n-}\r\n-\r\n-onMounted(() => {\r\n-  \r\n-});\r\n-\r\n-\r\n-defineExpose({\r\n-  change\r\n-})\r\n-\r\n-\r\n-</script>\r\n-\r\n-<style lang=\"scss\" scoped>\r\n-// .box{\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   align-items: center;\r\n-// }\r\n-// .el-dialog{\r\n-//   height:50%;\r\n-// }\r\n-// .el-input {\r\n-//   width: 80%;\r\n-//   margin: 0 auto;\r\n-// }\r\n-\r\n-// .button {\r\n-//   width: 100%;\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   margin-top: 25px; \r\n-//   margin-bottom: 20px;\r\n-//   .el-button{\r\n-//     margin: 0 auto;\r\n-//     width: 80%;\r\n-//   }\r\n-// }\r\n-</style>\r\n"
                },
                {
                    "date": 1702387421266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,8 @@\n     })\r\n     .then((res: any) => {\r\n       console.log(res);\r\n       let token = res.data;\r\n-      // window.localStorage.setItem(\"token\", token);\r\n       //解析token\r\n       const decode = jwt_decode(token);\r\n       console.log(\"token解析内容\", decode); //decode是一个对象\r\n       //把解析后的token内容放进store中\r\n"
                },
                {
                    "date": 1702387442407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+<!--\r\n+ * @Author: sunsan 2390864551@qq.com\r\n+ * @Date: 2023-11-07 20:46:44\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-12 21:20:34\r\n+ * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n+ * @Description: 登录页面\r\n+-->\r\n+<template>\r\n+  <div class=\"box\">\r\n+    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n+        <el-form :model=\"form\">\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n+          </el-form-item>\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n+          </el-form-item>\r\n+        </el-form>\r\n+        <div class=\"button\">\r\n+          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n+        </div>\r\n+    </el-dialog>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script lang=\"ts\" setup>\r\n+import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n+import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n+import apiFun from '../utils/api';\r\n+import { ElMessage } from \"element-plus\";\r\n+\r\n+\r\n+// 使用 props 获取父组件传递过来的数据\r\n+// const props = defineProps(['dialog']);\r\n+const dialog = ref(false);\r\n+\r\n+let form = reactive({\r\n+  username: '',\r\n+  password: '',\r\n+})\r\n+\r\n+function change(){\r\n+\tdialog.value = true;\r\n+}\r\n+\r\n+function login(){\r\n+  console.log(form)\r\n+\r\n+  apiFun.user.login({\r\n+      username: form.username,\r\n+      password: form.password,\r\n+    })\r\n+    .then((res: any) => {\r\n+      console.log(res);\r\n+      let token = res.data;\r\n+      // window.localStorage.setItem(\"token\", token);\r\n+      localSet(\"token\", token);\r\n+      //解析token\r\n+      const decode = jwt_decode(token);\r\n+      console.log(\"token解析内容\", decode); //decode是一个对象\r\n+      //把解析后的token内容放进store中\r\n+      // useStore.id = decode.id;\r\n+      // useStore.username = decode.username;\r\n+      // useStore.token = token;\r\n+\r\n+      if(res.code === 200){\r\n+        ElMessage.success(\"登录成功\");\r\n+        this.$router.push('/')\r\n+        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n+      }else{\r\n+        console.log(res.message)\r\n+        ElMessage.error(\"登录失败\");\r\n+        // router.push({ path: \"/home\" }); //跳转到主页面\r\n+      }\r\n+    }).catch((err: any)=>{\r\n+      console.log(err);\r\n+    });\r\n+  \r\n+  dialog.value = false;\r\n+}\r\n+\r\n+onMounted(() => {\r\n+  \r\n+});\r\n+\r\n+\r\n+defineExpose({\r\n+  change\r\n+})\r\n+\r\n+\r\n+</script>\r\n+\r\n+<style lang=\"scss\" scoped>\r\n+// .box{\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   align-items: center;\r\n+// }\r\n+// .el-dialog{\r\n+//   height:50%;\r\n+// }\r\n+// .el-input {\r\n+//   width: 80%;\r\n+//   margin: 0 auto;\r\n+// }\r\n+\r\n+// .button {\r\n+//   width: 100%;\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   margin-top: 25px; \r\n+//   margin-bottom: 20px;\r\n+//   .el-button{\r\n+//     margin: 0 auto;\r\n+//     width: 80%;\r\n+//   }\r\n+// }\r\n+</style>\r\n"
                },
                {
                    "date": 1702387520286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+<!--\r\n+ * @Author: sunsan 2390864551@qq.com\r\n+ * @Date: 2023-11-07 20:46:44\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-12 21:25:20\r\n+ * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n+ * @Description: 登录页面\r\n+-->\r\n+<template>\r\n+  <div class=\"box\">\r\n+    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n+        <el-form :model=\"form\">\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n+          </el-form-item>\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n+          </el-form-item>\r\n+        </el-form>\r\n+        <div class=\"button\">\r\n+          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n+        </div>\r\n+    </el-dialog>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script lang=\"ts\" setup>\r\n+import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n+import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n+import apiFun from '../utils/api';\r\n+import { ElMessage } from \"element-plus\";\r\n+import { localSet } from '../../api/index'\r\n+\r\n+\r\n+// 使用 props 获取父组件传递过来的数据\r\n+// const props = defineProps(['dialog']);\r\n+const dialog = ref(false);\r\n+\r\n+let form = reactive({\r\n+  username: '',\r\n+  password: '',\r\n+})\r\n+\r\n+function change(){\r\n+\tdialog.value = true;\r\n+}\r\n+\r\n+function login(){\r\n+  console.log(form)\r\n+\r\n+  apiFun.user.login({\r\n+      username: form.username,\r\n+      password: form.password,\r\n+    })\r\n+    .then((res: any) => {\r\n+      console.log(res);\r\n+      let token = res.data;\r\n+      // window.localStorage.setItem(\"token\", token);\r\n+      localSet(\"token\", token);\r\n+      //解析token\r\n+      const decode = jwt_decode(token);\r\n+      console.log(\"token解析内容\", decode); //decode是一个对象\r\n+      //把解析后的token内容放进store中\r\n+      // useStore.id = decode.id;\r\n+      // useStore.username = decode.username;\r\n+      // useStore.token = token;\r\n+\r\n+      if(res.code === 200){\r\n+        ElMessage.success(\"登录成功\");\r\n+        this.$router.push('/')\r\n+        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n+      }else{\r\n+        console.log(res.message)\r\n+        ElMessage.error(\"登录失败\");\r\n+        // router.push({ path: \"/home\" }); //跳转到主页面\r\n+      }\r\n+    }).catch((err: any)=>{\r\n+      console.log(err);\r\n+    });\r\n+  \r\n+  dialog.value = false;\r\n+}\r\n+\r\n+onMounted(() => {\r\n+  \r\n+});\r\n+\r\n+\r\n+defineExpose({\r\n+  change\r\n+})\r\n+\r\n+\r\n+</script>\r\n+\r\n+<style lang=\"scss\" scoped>\r\n+// .box{\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   align-items: center;\r\n+// }\r\n+// .el-dialog{\r\n+//   height:50%;\r\n+// }\r\n+// .el-input {\r\n+//   width: 80%;\r\n+//   margin: 0 auto;\r\n+// }\r\n+\r\n+// .button {\r\n+//   width: 100%;\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   margin-top: 25px; \r\n+//   margin-bottom: 20px;\r\n+//   .el-button{\r\n+//     margin: 0 auto;\r\n+//     width: 80%;\r\n+//   }\r\n+// }\r\n+</style>\r\n"
                },
                {
                    "date": 1702387681742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+<!--\r\n+ * @Author: sunsan 2390864551@qq.com\r\n+ * @Date: 2023-11-07 20:46:44\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-12 21:28:01\r\n+ * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n+ * @Description: 登录页面\r\n+-->\r\n+<template>\r\n+  <div class=\"box\">\r\n+    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n+        <el-form :model=\"form\">\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n+          </el-form-item>\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n+          </el-form-item>\r\n+        </el-form>\r\n+        <div class=\"button\">\r\n+          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n+        </div>\r\n+    </el-dialog>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script lang=\"ts\" setup>\r\n+import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n+import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n+import apiFun from '../utils/api';\r\n+import { ElMessage } from \"element-plus\";\r\n+import { localSet } from '../'\r\n+\r\n+\r\n+// 使用 props 获取父组件传递过来的数据\r\n+// const props = defineProps(['dialog']);\r\n+const dialog = ref(false);\r\n+\r\n+let form = reactive({\r\n+  username: '',\r\n+  password: '',\r\n+})\r\n+\r\n+function change(){\r\n+\tdialog.value = true;\r\n+}\r\n+\r\n+function login(){\r\n+  console.log(form)\r\n+\r\n+  apiFun.user.login({\r\n+      username: form.username,\r\n+      password: form.password,\r\n+    })\r\n+    .then((res: any) => {\r\n+      console.log(res);\r\n+      let token = res.data;\r\n+      // window.localStorage.setItem(\"token\", token);\r\n+      localSet(\"token\", token);\r\n+      //解析token\r\n+      const decode = jwt_decode(token);\r\n+      console.log(\"token解析内容\", decode); //decode是一个对象\r\n+      //把解析后的token内容放进store中\r\n+      // useStore.id = decode.id;\r\n+      // useStore.username = decode.username;\r\n+      // useStore.token = token;\r\n+\r\n+      if(res.code === 200){\r\n+        ElMessage.success(\"登录成功\");\r\n+        this.$router.push('/')\r\n+        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n+      }else{\r\n+        console.log(res.message)\r\n+        ElMessage.error(\"登录失败\");\r\n+        // router.push({ path: \"/home\" }); //跳转到主页面\r\n+      }\r\n+    }).catch((err: any)=>{\r\n+      console.log(err);\r\n+    });\r\n+  \r\n+  dialog.value = false;\r\n+}\r\n+\r\n+onMounted(() => {\r\n+  \r\n+});\r\n+\r\n+\r\n+defineExpose({\r\n+  change\r\n+})\r\n+\r\n+\r\n+</script>\r\n+\r\n+<style lang=\"scss\" scoped>\r\n+// .box{\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   align-items: center;\r\n+// }\r\n+// .el-dialog{\r\n+//   height:50%;\r\n+// }\r\n+// .el-input {\r\n+//   width: 80%;\r\n+//   margin: 0 auto;\r\n+// }\r\n+\r\n+// .button {\r\n+//   width: 100%;\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   margin-top: 25px; \r\n+//   margin-bottom: 20px;\r\n+//   .el-button{\r\n+//     margin: 0 auto;\r\n+//     width: 80%;\r\n+//   }\r\n+// }\r\n+</style>\r\n"
                },
                {
                    "date": 1702387687739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+<!--\r\n+ * @Author: sunsan 2390864551@qq.com\r\n+ * @Date: 2023-11-07 20:46:44\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-12 21:28:01\r\n+ * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n+ * @Description: 登录页面\r\n+-->\r\n+<template>\r\n+  <div class=\"box\">\r\n+    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n+        <el-form :model=\"form\">\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n+          </el-form-item>\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n+          </el-form-item>\r\n+        </el-form>\r\n+        <div class=\"button\">\r\n+          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n+        </div>\r\n+    </el-dialog>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script lang=\"ts\" setup>\r\n+import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n+import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n+import apiFun from '../utils/api';\r\n+import { ElMessage } from \"element-plus\";\r\n+import { localSet } from '../utils/index'\r\n+\r\n+\r\n+// 使用 props 获取父组件传递过来的数据\r\n+// const props = defineProps(['dialog']);\r\n+const dialog = ref(false);\r\n+\r\n+let form = reactive({\r\n+  username: '',\r\n+  password: '',\r\n+})\r\n+\r\n+function change(){\r\n+\tdialog.value = true;\r\n+}\r\n+\r\n+function login(){\r\n+  console.log(form)\r\n+\r\n+  apiFun.user.login({\r\n+      username: form.username,\r\n+      password: form.password,\r\n+    })\r\n+    .then((res: any) => {\r\n+      console.log(res);\r\n+      let token = res.data;\r\n+      // window.localStorage.setItem(\"token\", token);\r\n+      localSet(\"token\", token);\r\n+      //解析token\r\n+      const decode = jwt_decode(token);\r\n+      console.log(\"token解析内容\", decode); //decode是一个对象\r\n+      //把解析后的token内容放进store中\r\n+      // useStore.id = decode.id;\r\n+      // useStore.username = decode.username;\r\n+      // useStore.token = token;\r\n+\r\n+      if(res.code === 200){\r\n+        ElMessage.success(\"登录成功\");\r\n+        this.$router.push('/')\r\n+        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n+      }else{\r\n+        console.log(res.message)\r\n+        ElMessage.error(\"登录失败\");\r\n+        // router.push({ path: \"/home\" }); //跳转到主页面\r\n+      }\r\n+    }).catch((err: any)=>{\r\n+      console.log(err);\r\n+    });\r\n+  \r\n+  dialog.value = false;\r\n+}\r\n+\r\n+onMounted(() => {\r\n+  \r\n+});\r\n+\r\n+\r\n+defineExpose({\r\n+  change\r\n+})\r\n+\r\n+\r\n+</script>\r\n+\r\n+<style lang=\"scss\" scoped>\r\n+// .box{\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   align-items: center;\r\n+// }\r\n+// .el-dialog{\r\n+//   height:50%;\r\n+// }\r\n+// .el-input {\r\n+//   width: 80%;\r\n+//   margin: 0 auto;\r\n+// }\r\n+\r\n+// .button {\r\n+//   width: 100%;\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   margin-top: 25px; \r\n+//   margin-bottom: 20px;\r\n+//   .el-button{\r\n+//     margin: 0 auto;\r\n+//     width: 80%;\r\n+//   }\r\n+// }\r\n+</style>\r\n"
                },
                {
                    "date": 1702387694219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+<!--\r\n+ * @Author: sunsan 2390864551@qq.com\r\n+ * @Date: 2023-11-07 20:46:44\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-12 21:28:01\r\n+ * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n+ * @Description: 登录页面\r\n+-->\r\n+<template>\r\n+  <div class=\"box\">\r\n+    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n+        <el-form :model=\"form\">\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n+          </el-form-item>\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n+          </el-form-item>\r\n+        </el-form>\r\n+        <div class=\"button\">\r\n+          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n+        </div>\r\n+    </el-dialog>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script lang=\"ts\" setup>\r\n+import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n+import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n+import apiFun from '../utils/api';\r\n+import { ElMessage } from \"element-plus\";\r\n+import { localSet } from '../utils/index'\r\n+\r\n+\r\n+// 使用 props 获取父组件传递过来的数据\r\n+// const props = defineProps(['dialog']);\r\n+const dialog = ref(false);\r\n+\r\n+let form = reactive({\r\n+  username: '',\r\n+  password: '',\r\n+})\r\n+\r\n+function change(){\r\n+\tdialog.value = true;\r\n+}\r\n+\r\n+function login(){\r\n+  console.log(form)\r\n+\r\n+  apiFun.user.login({\r\n+      username: form.username,\r\n+      password: form.password,\r\n+    })\r\n+    .then((res: any) => {\r\n+      console.log(res);\r\n+      let token = res.data;\r\n+      // window.localStorage.setItem(\"token\", token);\r\n+      localSet(\"token\", token);\r\n+      //解析token\r\n+      const decode = jwt_decode(token);\r\n+      console.log(\"token解析内容\", decode); //decode是一个对象\r\n+      //把解析后的token内容放进store中\r\n+      // useStore.id = decode.id;\r\n+      // useStore.username = decode.username;\r\n+      // useStore.token = token;\r\n+\r\n+      if(res.code === 200){\r\n+        ElMessage.success(\"登录成功\");\r\n+        this.$router.push('/')\r\n+        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n+      }else{\r\n+        console.log(res.message)\r\n+        ElMessage.error(\"登录失败\");\r\n+        // router.push({ path: \"/home\" }); //跳转到主页面\r\n+      }\r\n+    }).catch((err: any)=>{\r\n+      console.log(err);\r\n+    });\r\n+  \r\n+  dialog.value = false;\r\n+}\r\n+\r\n+onMounted(() => {\r\n+  \r\n+});\r\n+\r\n+\r\n+defineExpose({\r\n+  change\r\n+})\r\n+\r\n+\r\n+</script>\r\n+\r\n+<style lang=\"scss\" scoped>\r\n+// .box{\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   align-items: center;\r\n+// }\r\n+// .el-dialog{\r\n+//   height:50%;\r\n+// }\r\n+// .el-input {\r\n+//   width: 80%;\r\n+//   margin: 0 auto;\r\n+// }\r\n+\r\n+// .button {\r\n+//   width: 100%;\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   margin-top: 25px; \r\n+//   margin-bottom: 20px;\r\n+//   .el-button{\r\n+//     margin: 0 auto;\r\n+//     width: 80%;\r\n+//   }\r\n+// }\r\n+</style>\r\n"
                },
                {
                    "date": 1702387735384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n import apiFun from '../utils/api';\r\n import { ElMessage } from \"element-plus\";\r\n+import jwt_decode from \"jwt-decode\"; //解析token\r\n import { localSet } from '../utils/index'\r\n \r\n \r\n // 使用 props 获取父组件传递过来的数据\r\n@@ -118,605 +119,4 @@\n //     width: 80%;\r\n //   }\r\n // }\r\n </style>\r\n-<!--\r\n- * @Author: sunsan 2390864551@qq.com\r\n- * @Date: 2023-11-07 20:46:44\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:28:01\r\n- * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n- * @Description: 登录页面\r\n--->\r\n-<template>\r\n-  <div class=\"box\">\r\n-    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n-        <el-form :model=\"form\">\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n-          </el-form-item>\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n-          </el-form-item>\r\n-        </el-form>\r\n-        <div class=\"button\">\r\n-          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n-        </div>\r\n-    </el-dialog>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script lang=\"ts\" setup>\r\n-import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n-import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n-import apiFun from '../utils/api';\r\n-import { ElMessage } from \"element-plus\";\r\n-import { localSet } from '../utils/index'\r\n-\r\n-\r\n-// 使用 props 获取父组件传递过来的数据\r\n-// const props = defineProps(['dialog']);\r\n-const dialog = ref(false);\r\n-\r\n-let form = reactive({\r\n-  username: '',\r\n-  password: '',\r\n-})\r\n-\r\n-function change(){\r\n-\tdialog.value = true;\r\n-}\r\n-\r\n-function login(){\r\n-  console.log(form)\r\n-\r\n-  apiFun.user.login({\r\n-      username: form.username,\r\n-      password: form.password,\r\n-    })\r\n-    .then((res: any) => {\r\n-      console.log(res);\r\n-      let token = res.data;\r\n-      // window.localStorage.setItem(\"token\", token);\r\n-      localSet(\"token\", token);\r\n-      //解析token\r\n-      const decode = jwt_decode(token);\r\n-      console.log(\"token解析内容\", decode); //decode是一个对象\r\n-      //把解析后的token内容放进store中\r\n-      // useStore.id = decode.id;\r\n-      // useStore.username = decode.username;\r\n-      // useStore.token = token;\r\n-\r\n-      if(res.code === 200){\r\n-        ElMessage.success(\"登录成功\");\r\n-        this.$router.push('/')\r\n-        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n-      }else{\r\n-        console.log(res.message)\r\n-        ElMessage.error(\"登录失败\");\r\n-        // router.push({ path: \"/home\" }); //跳转到主页面\r\n-      }\r\n-    }).catch((err: any)=>{\r\n-      console.log(err);\r\n-    });\r\n-  \r\n-  dialog.value = false;\r\n-}\r\n-\r\n-onMounted(() => {\r\n-  \r\n-});\r\n-\r\n-\r\n-defineExpose({\r\n-  change\r\n-})\r\n-\r\n-\r\n-</script>\r\n-\r\n-<style lang=\"scss\" scoped>\r\n-// .box{\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   align-items: center;\r\n-// }\r\n-// .el-dialog{\r\n-//   height:50%;\r\n-// }\r\n-// .el-input {\r\n-//   width: 80%;\r\n-//   margin: 0 auto;\r\n-// }\r\n-\r\n-// .button {\r\n-//   width: 100%;\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   margin-top: 25px; \r\n-//   margin-bottom: 20px;\r\n-//   .el-button{\r\n-//     margin: 0 auto;\r\n-//     width: 80%;\r\n-//   }\r\n-// }\r\n-</style>\r\n-<!--\r\n- * @Author: sunsan 2390864551@qq.com\r\n- * @Date: 2023-11-07 20:46:44\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:28:01\r\n- * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n- * @Description: 登录页面\r\n--->\r\n-<template>\r\n-  <div class=\"box\">\r\n-    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n-        <el-form :model=\"form\">\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n-          </el-form-item>\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n-          </el-form-item>\r\n-        </el-form>\r\n-        <div class=\"button\">\r\n-          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n-        </div>\r\n-    </el-dialog>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script lang=\"ts\" setup>\r\n-import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n-import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n-import apiFun from '../utils/api';\r\n-import { ElMessage } from \"element-plus\";\r\n-import { localSet } from '../'\r\n-\r\n-\r\n-// 使用 props 获取父组件传递过来的数据\r\n-// const props = defineProps(['dialog']);\r\n-const dialog = ref(false);\r\n-\r\n-let form = reactive({\r\n-  username: '',\r\n-  password: '',\r\n-})\r\n-\r\n-function change(){\r\n-\tdialog.value = true;\r\n-}\r\n-\r\n-function login(){\r\n-  console.log(form)\r\n-\r\n-  apiFun.user.login({\r\n-      username: form.username,\r\n-      password: form.password,\r\n-    })\r\n-    .then((res: any) => {\r\n-      console.log(res);\r\n-      let token = res.data;\r\n-      // window.localStorage.setItem(\"token\", token);\r\n-      localSet(\"token\", token);\r\n-      //解析token\r\n-      const decode = jwt_decode(token);\r\n-      console.log(\"token解析内容\", decode); //decode是一个对象\r\n-      //把解析后的token内容放进store中\r\n-      // useStore.id = decode.id;\r\n-      // useStore.username = decode.username;\r\n-      // useStore.token = token;\r\n-\r\n-      if(res.code === 200){\r\n-        ElMessage.success(\"登录成功\");\r\n-        this.$router.push('/')\r\n-        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n-      }else{\r\n-        console.log(res.message)\r\n-        ElMessage.error(\"登录失败\");\r\n-        // router.push({ path: \"/home\" }); //跳转到主页面\r\n-      }\r\n-    }).catch((err: any)=>{\r\n-      console.log(err);\r\n-    });\r\n-  \r\n-  dialog.value = false;\r\n-}\r\n-\r\n-onMounted(() => {\r\n-  \r\n-});\r\n-\r\n-\r\n-defineExpose({\r\n-  change\r\n-})\r\n-\r\n-\r\n-</script>\r\n-\r\n-<style lang=\"scss\" scoped>\r\n-// .box{\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   align-items: center;\r\n-// }\r\n-// .el-dialog{\r\n-//   height:50%;\r\n-// }\r\n-// .el-input {\r\n-//   width: 80%;\r\n-//   margin: 0 auto;\r\n-// }\r\n-\r\n-// .button {\r\n-//   width: 100%;\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   margin-top: 25px; \r\n-//   margin-bottom: 20px;\r\n-//   .el-button{\r\n-//     margin: 0 auto;\r\n-//     width: 80%;\r\n-//   }\r\n-// }\r\n-</style>\r\n-<!--\r\n- * @Author: sunsan 2390864551@qq.com\r\n- * @Date: 2023-11-07 20:46:44\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:25:20\r\n- * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n- * @Description: 登录页面\r\n--->\r\n-<template>\r\n-  <div class=\"box\">\r\n-    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n-        <el-form :model=\"form\">\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n-          </el-form-item>\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n-          </el-form-item>\r\n-        </el-form>\r\n-        <div class=\"button\">\r\n-          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n-        </div>\r\n-    </el-dialog>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script lang=\"ts\" setup>\r\n-import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n-import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n-import apiFun from '../utils/api';\r\n-import { ElMessage } from \"element-plus\";\r\n-import { localSet } from '../../api/index'\r\n-\r\n-\r\n-// 使用 props 获取父组件传递过来的数据\r\n-// const props = defineProps(['dialog']);\r\n-const dialog = ref(false);\r\n-\r\n-let form = reactive({\r\n-  username: '',\r\n-  password: '',\r\n-})\r\n-\r\n-function change(){\r\n-\tdialog.value = true;\r\n-}\r\n-\r\n-function login(){\r\n-  console.log(form)\r\n-\r\n-  apiFun.user.login({\r\n-      username: form.username,\r\n-      password: form.password,\r\n-    })\r\n-    .then((res: any) => {\r\n-      console.log(res);\r\n-      let token = res.data;\r\n-      // window.localStorage.setItem(\"token\", token);\r\n-      localSet(\"token\", token);\r\n-      //解析token\r\n-      const decode = jwt_decode(token);\r\n-      console.log(\"token解析内容\", decode); //decode是一个对象\r\n-      //把解析后的token内容放进store中\r\n-      // useStore.id = decode.id;\r\n-      // useStore.username = decode.username;\r\n-      // useStore.token = token;\r\n-\r\n-      if(res.code === 200){\r\n-        ElMessage.success(\"登录成功\");\r\n-        this.$router.push('/')\r\n-        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n-      }else{\r\n-        console.log(res.message)\r\n-        ElMessage.error(\"登录失败\");\r\n-        // router.push({ path: \"/home\" }); //跳转到主页面\r\n-      }\r\n-    }).catch((err: any)=>{\r\n-      console.log(err);\r\n-    });\r\n-  \r\n-  dialog.value = false;\r\n-}\r\n-\r\n-onMounted(() => {\r\n-  \r\n-});\r\n-\r\n-\r\n-defineExpose({\r\n-  change\r\n-})\r\n-\r\n-\r\n-</script>\r\n-\r\n-<style lang=\"scss\" scoped>\r\n-// .box{\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   align-items: center;\r\n-// }\r\n-// .el-dialog{\r\n-//   height:50%;\r\n-// }\r\n-// .el-input {\r\n-//   width: 80%;\r\n-//   margin: 0 auto;\r\n-// }\r\n-\r\n-// .button {\r\n-//   width: 100%;\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   margin-top: 25px; \r\n-//   margin-bottom: 20px;\r\n-//   .el-button{\r\n-//     margin: 0 auto;\r\n-//     width: 80%;\r\n-//   }\r\n-// }\r\n-</style>\r\n-<!--\r\n- * @Author: sunsan 2390864551@qq.com\r\n- * @Date: 2023-11-07 20:46:44\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:20:34\r\n- * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n- * @Description: 登录页面\r\n--->\r\n-<template>\r\n-  <div class=\"box\">\r\n-    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n-        <el-form :model=\"form\">\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n-          </el-form-item>\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n-          </el-form-item>\r\n-        </el-form>\r\n-        <div class=\"button\">\r\n-          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n-        </div>\r\n-    </el-dialog>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script lang=\"ts\" setup>\r\n-import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n-import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n-import apiFun from '../utils/api';\r\n-import { ElMessage } from \"element-plus\";\r\n-\r\n-\r\n-// 使用 props 获取父组件传递过来的数据\r\n-// const props = defineProps(['dialog']);\r\n-const dialog = ref(false);\r\n-\r\n-let form = reactive({\r\n-  username: '',\r\n-  password: '',\r\n-})\r\n-\r\n-function change(){\r\n-\tdialog.value = true;\r\n-}\r\n-\r\n-function login(){\r\n-  console.log(form)\r\n-\r\n-  apiFun.user.login({\r\n-      username: form.username,\r\n-      password: form.password,\r\n-    })\r\n-    .then((res: any) => {\r\n-      console.log(res);\r\n-      let token = res.data;\r\n-      // window.localStorage.setItem(\"token\", token);\r\n-      localSet(\"token\", token);\r\n-      //解析token\r\n-      const decode = jwt_decode(token);\r\n-      console.log(\"token解析内容\", decode); //decode是一个对象\r\n-      //把解析后的token内容放进store中\r\n-      // useStore.id = decode.id;\r\n-      // useStore.username = decode.username;\r\n-      // useStore.token = token;\r\n-\r\n-      if(res.code === 200){\r\n-        ElMessage.success(\"登录成功\");\r\n-        this.$router.push('/')\r\n-        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n-      }else{\r\n-        console.log(res.message)\r\n-        ElMessage.error(\"登录失败\");\r\n-        // router.push({ path: \"/home\" }); //跳转到主页面\r\n-      }\r\n-    }).catch((err: any)=>{\r\n-      console.log(err);\r\n-    });\r\n-  \r\n-  dialog.value = false;\r\n-}\r\n-\r\n-onMounted(() => {\r\n-  \r\n-});\r\n-\r\n-\r\n-defineExpose({\r\n-  change\r\n-})\r\n-\r\n-\r\n-</script>\r\n-\r\n-<style lang=\"scss\" scoped>\r\n-// .box{\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   align-items: center;\r\n-// }\r\n-// .el-dialog{\r\n-//   height:50%;\r\n-// }\r\n-// .el-input {\r\n-//   width: 80%;\r\n-//   margin: 0 auto;\r\n-// }\r\n-\r\n-// .button {\r\n-//   width: 100%;\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   margin-top: 25px; \r\n-//   margin-bottom: 20px;\r\n-//   .el-button{\r\n-//     margin: 0 auto;\r\n-//     width: 80%;\r\n-//   }\r\n-// }\r\n-</style>\r\n-<!--\r\n- * @Author: sunsan 2390864551@qq.com\r\n- * @Date: 2023-11-07 20:46:44\r\n- * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:23:35\r\n- * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n- * @Description: 登录页面\r\n--->\r\n-<template>\r\n-  <div class=\"box\">\r\n-    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n-        <el-form :model=\"form\">\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n-          </el-form-item>\r\n-          <el-form-item label=\"\" >\r\n-              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n-          </el-form-item>\r\n-        </el-form>\r\n-        <div class=\"button\">\r\n-          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n-        </div>\r\n-    </el-dialog>\r\n-  </div>\r\n-</template>\r\n-\r\n-<script lang=\"ts\" setup>\r\n-import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n-import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n-import apiFun from '../utils/api';\r\n-import { ElMessage } from \"element-plus\";\r\n-\r\n-\r\n-// 使用 props 获取父组件传递过来的数据\r\n-// const props = defineProps(['dialog']);\r\n-const dialog = ref(false);\r\n-\r\n-let form = reactive({\r\n-  username: '',\r\n-  password: '',\r\n-})\r\n-\r\n-function change(){\r\n-\tdialog.value = true;\r\n-}\r\n-\r\n-function login(){\r\n-  console.log(form)\r\n-\r\n-  apiFun.user.login({\r\n-      username: form.username,\r\n-      password: form.password,\r\n-    })\r\n-    .then((res: any) => {\r\n-      console.log(res);\r\n-      let token = res.data;\r\n-      //解析token\r\n-      const decode = jwt_decode(token);\r\n-      console.log(\"token解析内容\", decode); //decode是一个对象\r\n-      //把解析后的token内容放进store中\r\n-      // useStore.id = decode.id;\r\n-      // useStore.username = decode.username;\r\n-      // useStore.token = token;\r\n-\r\n-      if(res.code === 200){\r\n-        ElMessage.success(\"登录成功\");\r\n-        this.$router.push('/')\r\n-        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n-      }else{\r\n-        console.log(res.message)\r\n-        ElMessage.error(\"登录失败\");\r\n-        // router.push({ path: \"/home\" }); //跳转到主页面\r\n-      }\r\n-    }).catch((err: any)=>{\r\n-      console.log(err);\r\n-    });\r\n-  \r\n-  dialog.value = false;\r\n-}\r\n-\r\n-onMounted(() => {\r\n-  \r\n-});\r\n-\r\n-\r\n-defineExpose({\r\n-  change\r\n-})\r\n-\r\n-\r\n-</script>\r\n-\r\n-<style lang=\"scss\" scoped>\r\n-// .box{\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   align-items: center;\r\n-// }\r\n-// .el-dialog{\r\n-//   height:50%;\r\n-// }\r\n-// .el-input {\r\n-//   width: 80%;\r\n-//   margin: 0 auto;\r\n-// }\r\n-\r\n-// .button {\r\n-//   width: 100%;\r\n-//   display: flex;\r\n-//   justify-content: center;\r\n-//   margin-top: 25px; \r\n-//   margin-bottom: 20px;\r\n-//   .el-button{\r\n-//     margin: 0 auto;\r\n-//     width: 80%;\r\n-//   }\r\n-// }\r\n-</style>\r\n"
                },
                {
                    "date": 1702387741969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <!--\r\n  * @Author: sunsan 2390864551@qq.com\r\n  * @Date: 2023-11-07 20:46:44\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:28:01\r\n+ * @LastEditTime: 2023-12-12 21:29:01\r\n  * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n  * @Description: 登录页面\r\n -->\r\n <template>\r\n@@ -27,10 +27,10 @@\n <script lang=\"ts\" setup>\r\n import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n import apiFun from '../utils/api';\r\n+import jwt_decode from \"jwt-decode\"; //解析token\r\n import { ElMessage } from \"element-plus\";\r\n-import jwt_decode from \"jwt-decode\"; //解析token\r\n import { localSet } from '../utils/index'\r\n \r\n \r\n // 使用 props 获取父组件传递过来的数据\r\n"
                },
                {
                    "date": 1702388052369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <!--\r\n  * @Author: sunsan 2390864551@qq.com\r\n  * @Date: 2023-11-07 20:46:44\r\n  * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n- * @LastEditTime: 2023-12-12 21:29:01\r\n+ * @LastEditTime: 2023-12-12 21:34:12\r\n  * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n  * @Description: 登录页面\r\n -->\r\n <template>\r\n@@ -61,11 +61,11 @@\n       //解析token\r\n       const decode = jwt_decode(token);\r\n       console.log(\"token解析内容\", decode); //decode是一个对象\r\n       //把解析后的token内容放进store中\r\n-      // useStore.id = decode.id;\r\n-      // useStore.username = decode.username;\r\n-      // useStore.token = token;\r\n+      useStore.id = decode.id;\r\n+      useStore.username = decode.username;\r\n+      useStore.token = token;\r\n \r\n       if(res.code === 200){\r\n         ElMessage.success(\"登录成功\");\r\n         this.$router.push('/')\r\n"
                },
                {
                    "date": 1702388063955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n import apiFun from '../utils/api';\r\n import jwt_decode from \"jwt-decode\"; //解析token\r\n import { ElMessage } from \"element-plus\";\r\n import { localSet } from '../utils/index'\r\n+im\r\n \r\n \r\n // 使用 props 获取父组件传递过来的数据\r\n // const props = defineProps(['dialog']);\r\n"
                },
                {
                    "date": 1702388071760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n import apiFun from '../utils/api';\r\n import jwt_decode from \"jwt-decode\"; //解析token\r\n import { ElMessage } from \"element-plus\";\r\n import { localSet } from '../utils/index'\r\n-import \r\n+import { }\r\n \r\n \r\n // 使用 props 获取父组件传递过来的数据\r\n // const props = defineProps(['dialog']);\r\n"
                },
                {
                    "date": 1702388094684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,123 @@\n+<!--\r\n+ * @Author: sunsan 2390864551@qq.com\r\n+ * @Date: 2023-11-07 20:46:44\r\n+ * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n+ * @LastEditTime: 2023-12-12 21:34:12\r\n+ * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n+ * @Description: 登录页面\r\n+-->\r\n+<template>\r\n+  <div class=\"box\">\r\n+    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n+        <el-form :model=\"form\">\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n+          </el-form-item>\r\n+          <el-form-item label=\"\" >\r\n+              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n+          </el-form-item>\r\n+        </el-form>\r\n+        <div class=\"button\">\r\n+          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n+        </div>\r\n+    </el-dialog>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script lang=\"ts\" setup>\r\n+import { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\n+import { UserFilled, Lock } from '@element-plus/icons-vue'\r\n+import apiFun from '../utils/api';\r\n+import jwt_decode from \"jwt-decode\"; //解析token\r\n+import { ElMessage } from \"element-plus\";\r\n+import { localSet } from '../utils/index'\r\n+import { useStore } from ''\r\n+\r\n+\r\n+// 使用 props 获取父组件传递过来的数据\r\n+// const props = defineProps(['dialog']);\r\n+const dialog = ref(false);\r\n+\r\n+let form = reactive({\r\n+  username: '',\r\n+  password: '',\r\n+})\r\n+\r\n+function change(){\r\n+\tdialog.value = true;\r\n+}\r\n+\r\n+function login(){\r\n+  console.log(form)\r\n+\r\n+  apiFun.user.login({\r\n+      username: form.username,\r\n+      password: form.password,\r\n+    })\r\n+    .then((res: any) => {\r\n+      console.log(res);\r\n+      let token = res.data;\r\n+      // window.localStorage.setItem(\"token\", token);\r\n+      localSet(\"token\", token);\r\n+      //解析token\r\n+      const decode = jwt_decode(token);\r\n+      console.log(\"token解析内容\", decode); //decode是一个对象\r\n+      //把解析后的token内容放进store中\r\n+      useStore.id = decode.id;\r\n+      useStore.username = decode.username;\r\n+      useStore.token = token;\r\n+\r\n+      if(res.code === 200){\r\n+        ElMessage.success(\"登录成功\");\r\n+        this.$router.push('/')\r\n+        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n+      }else{\r\n+        console.log(res.message)\r\n+        ElMessage.error(\"登录失败\");\r\n+        // router.push({ path: \"/home\" }); //跳转到主页面\r\n+      }\r\n+    }).catch((err: any)=>{\r\n+      console.log(err);\r\n+    });\r\n+  \r\n+  dialog.value = false;\r\n+}\r\n+\r\n+onMounted(() => {\r\n+  \r\n+});\r\n+\r\n+\r\n+defineExpose({\r\n+  change\r\n+})\r\n+\r\n+\r\n+</script>\r\n+\r\n+<style lang=\"scss\" scoped>\r\n+// .box{\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   align-items: center;\r\n+// }\r\n+// .el-dialog{\r\n+//   height:50%;\r\n+// }\r\n+// .el-input {\r\n+//   width: 80%;\r\n+//   margin: 0 auto;\r\n+// }\r\n+\r\n+// .button {\r\n+//   width: 100%;\r\n+//   display: flex;\r\n+//   justify-content: center;\r\n+//   margin-top: 25px; \r\n+//   margin-bottom: 20px;\r\n+//   .el-button{\r\n+//     margin: 0 auto;\r\n+//     width: 80%;\r\n+//   }\r\n+// }\r\n+</style>\r\n"
                }
            ],
            "date": 1702387234448,
            "name": "Commit-0",
            "content": "<!--\r\n * @Author: sunsan 2390864551@qq.com\r\n * @Date: 2023-11-07 20:46:44\r\n * @LastEditors: error: error: git config user.name & please set dead value or install git && error: git config user.email & please set dead value or install git & please set dead value or install git\r\n * @LastEditTime: 2023-12-12 21:20:34\r\n * @FilePath: \\hopeEnroll\\hope_enroll\\src\\views\\Login.vue\r\n * @Description: 登录页面\r\n-->\r\n<template>\r\n  <div class=\"box\">\r\n    <el-dialog v-model=\"dialog\" title=\"登陆\" width=\"30%\" draggable>\r\n        <el-form :model=\"form\">\r\n          <el-form-item label=\"\" >\r\n              <el-input v-model=\"form.username\" autocomplete=\"off\" :prefix-icon=\"UserFilled\" placeholder=\"请输入您的学号\"/>\r\n          </el-form-item>\r\n          <el-form-item label=\"\" >\r\n              <el-input v-model=\"form.password\" autocomplete=\"off\" :prefix-icon=\"Lock\" type=\"password\" placeholder=\"请输入密码\" show-password/>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div class=\"button\">\r\n          <el-button width=\"100%\" type=\"primary\" @click=\"login()\">立即登录</el-button>\r\n        </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, computed, watch, onMounted, toRefs } from 'vue';\r\nimport { UserFilled, Lock } from '@element-plus/icons-vue'\r\nimport apiFun from '../utils/api';\r\n\r\n\r\n// 使用 props 获取父组件传递过来的数据\r\n// const props = defineProps(['dialog']);\r\nconst dialog = ref(false);\r\n\r\nlet form = reactive({\r\n  username: '',\r\n  password: '',\r\n})\r\n\r\nfunction change(){\r\n\tdialog.value = true;\r\n}\r\n\r\nfunction login(){\r\n  console.log(form)\r\n\r\n  apiFun.user.login({\r\n      username: form.username,\r\n      password: form.password,\r\n    })\r\n    .then((res: any) => {\r\n      console.log(res);\r\n      let token = res.data;\r\n      // window.localStorage.setItem(\"token\", token);\r\n      localSet(\"token\", token);\r\n      //解析token\r\n      const decode = jwt_decode(token);\r\n      console.log(\"token解析内容\", decode); //decode是一个对象\r\n      //把解析后的token内容放进store中\r\n      // useStore.id = decode.id;\r\n      // useStore.username = decode.username;\r\n      // useStore.token = token;\r\n\r\n      if(res.code === 200){\r\n        ElMessage.success(\"登录成功\");\r\n        this.$router.push('/')\r\n        // window.location.href = 'http://localhost:8080/#/home' //跳转到主页面管理界面\r\n      }else{\r\n        console.log(res.message)\r\n        ElMessage.error(\"登录失败\");\r\n        // router.push({ path: \"/home\" }); //跳转到主页面\r\n      }\r\n    }).catch((err: any)=>{\r\n      console.log(err);\r\n    });\r\n  \r\n  dialog.value = false;\r\n}\r\n\r\nonMounted(() => {\r\n  \r\n});\r\n\r\n\r\ndefineExpose({\r\n  change\r\n})\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// .box{\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n// }\r\n// .el-dialog{\r\n//   height:50%;\r\n// }\r\n// .el-input {\r\n//   width: 80%;\r\n//   margin: 0 auto;\r\n// }\r\n\r\n// .button {\r\n//   width: 100%;\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   margin-top: 25px; \r\n//   margin-bottom: 20px;\r\n//   .el-button{\r\n//     margin: 0 auto;\r\n//     width: 80%;\r\n//   }\r\n// }\r\n</style>\r\n"
        }
    ]
}